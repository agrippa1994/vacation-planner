var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.583,1,1.968]],["body/modules/AppModule.html",[0,0.734,1,3.795,2,1.166,3,1.39,4,0.976,5,2.098,6,2.098,7,2.098,8,1.39,9,3.233,10,3.233,11,3.4,12,0.035,13,1.918,14,1.661,15,1.661,16,0.356,17,0.356,18,0.302,19,3.889,20,1.918,21,0.553,22,1.918,23,0.302,24,4.911,25,3.233,26,2.801,27,4.911,28,1.39,29,1.822,30,4.911,31,1.067,32,1.822,33,3.889,34,5.383,35,3.889,36,4.911,37,1.822,38,3.233,39,3.889,40,3.889,41,3.889,42,0.356,43,0.108,44,0.021,45,0.026,46,0.021]],["title/modules/AppRoutingModule.html",[0,0.583,11,1.764]],["body/modules/AppRoutingModule.html",[2,1.223,8,1.458,11,2.889,12,0.035,16,0.373,17,0.373,18,0.317,20,1.592,21,0.503,22,1.976,23,0.317,28,1.458,42,0.373,43,0.113,44,0.022,45,0.027,46,0.022,47,4.077,48,4.077,49,5.059,50,2.37,51,1.966,52,4.573,53,1.65,54,1.592,55,0.933,56,2.37,57,4.206,58,4.077,59,1.592,60,3.39,61,4.077,62,4.077,63,1.023,64,1.517,65,4.077,66,1.656,67,4.077]],["title/components/CashboxPage.html",[68,0.473,69,1.104]],["body/components/CashboxPage.html",[4,0.408,12,0.035,16,0.149,17,0.149,18,0.126,21,0.402,23,0.126,31,0.447,32,2.251,42,0.149,43,0.045,44,0.009,45,0.014,46,0.009,53,1.487,54,0.636,55,0.751,59,0.636,63,0.943,64,1.441,68,0.759,69,1.343,70,1.226,71,0.84,72,0.84,73,0.84,74,0.84,75,1.353,76,0.582,77,2.616,78,5.089,79,2.616,80,3.757,81,2.732,82,2.616,83,3.123,84,1.494,85,1.692,86,0.84,87,2.478,88,3.123,89,1.349,90,3.28,91,1.349,92,2.616,93,0.339,94,0.935,95,2.363,96,3.28,97,1.022,98,1.862,99,3.757,100,1.873,101,3.28,102,3.757,103,2.145,104,2.616,105,1.628,106,2.251,107,3.571,108,3.571,109,3.16,110,1.427,111,2.616,112,2.478,113,1.759,114,1.974,115,1.205,116,1.607,117,1.628,118,2.175,119,0.785,120,2.847,121,1.329,122,1.667,123,1.628,124,2.384,125,1.667,126,2.616,127,1.628,128,2.616,129,2.616,130,2.616,131,1.628,132,2.616,133,2.727,134,2.175,135,1.628,136,2.175,137,2.616,138,2.616,139,2.175,140,2.616,141,2.616,142,1.628,143,3.655,144,3.757,145,0.857,146,0.857,147,1.884,148,1.628,149,1.628,150,2.175,151,1.628,152,1.628,153,1.173,154,1.353,155,1.353,156,0.488,157,1.624,158,1.318,159,1.809,160,3.28,161,1.118,162,1.628,163,1.628,164,1.628,165,1.628,166,1.494,167,1.349,168,2.175,169,1.667,170,1.667,171,1.494,172,2.175,173,1.353,174,2.175,175,1.353,176,1.628,177,1.628,178,1.628,179,3.28,180,3.28,181,1.628,182,1.628,183,1.353,184,0.84,185,0.929,186,1.628,187,1.628,188,1.628,189,1.353,190,1.628,191,1.353,192,1.628,193,1.628,194,1.628,195,1.628,196,1.628,197,2.616,198,2.616,199,2.616,200,2.616,201,2.616,202,1.628,203,2.175,204,1.884,205,1.349,206,1.349,207,0.84,208,1.938,209,0.84,210,1.628,211,0.84,212,0.84,213,0.582,214,0.84,215,0.582,216,0.84,217,0.582,218,0.84,219,0.582,220,0.84,221,0.84]],["title/modules/CashboxPageModule.html",[0,0.583,222,1.968]],["body/modules/CashboxPageModule.html",[0,0.715,2,1.136,3,1.354,4,0.95,5,2.272,6,1.618,7,1.618,8,1.354,12,0.035,13,1.886,14,1.618,15,1.618,16,0.346,17,0.346,18,0.294,20,1.479,21,0.55,22,1.886,23,0.294,28,1.354,29,2.263,31,1.04,38,4.015,42,0.346,43,0.105,44,0.02,45,0.026,46,0.02,50,1.775,51,1.901,55,0.867,56,1.775,68,0.58,69,2.149,153,2.175,154,3.148,222,3.878,223,3.148,224,3.148,225,3.787,226,2.491,227,1.775,228,2.491,229,1.775,230,3.787,231,1.953]],["title/injectables/CashboxService.html",[106,1.447,232,0.848]],["body/injectables/CashboxService.html",[12,0.035,16,0.385,17,0.222,18,0.189,21,0.385,23,0.189,37,1.137,42,0.424,43,0.117,44,0.013,45,0.019,46,0.013,53,0.728,54,0.948,63,0.893,64,0.728,66,1.617,76,1.272,81,2.751,93,0.505,97,1.39,98,1.954,100,2.032,106,1.667,110,1.417,112,2.821,113,2.11,114,2.11,115,1.239,116,1.929,118,2.958,119,1.067,120,2.926,121,1.423,122,2.268,124,1.667,125,2.268,145,1.165,146,0.795,156,1.725,157,1.617,158,1.762,159,1.617,232,0.977,233,1.386,234,1.547,235,2.956,236,2.427,237,2.821,238,2.427,239,1.39,240,2.563,241,2.563,242,2.427,243,2.563,244,2.427,245,2.427,246,2.563,247,2.427,248,2.563,249,2.663,250,2.393,251,2.563,252,2.427,253,2.563,254,1.52,255,1.836,256,2.947,257,2.032,258,2.563,259,1.037,260,1.037,261,1.748,262,2.563,263,1.748,264,1.748,265,1.748,266,1.748]],["title/components/EditorComponent.html",[68,0.473,153,1.104]],["body/components/EditorComponent.html",[4,0.574,12,0.035,16,0.209,17,0.209,18,0.178,21,0.412,23,0.178,31,0.628,32,2.52,42,0.209,43,0.064,44,0.012,45,0.018,46,0.012,55,0.524,59,0.894,63,1.131,64,1.352,68,0.738,69,0.818,70,1.596,71,1.18,72,1.18,73,1.18,74,1.18,76,1.612,85,1.18,86,1.18,87,2.774,89,1.757,91,1.757,93,0.476,94,1.218,95,2.931,97,1.33,98,1.654,106,2.575,107,3.873,108,3.958,109,3.502,110,1.387,113,0.978,114,1.739,115,1.131,116,0.894,119,1.352,120,2.693,121,1.131,124,1.596,139,1.902,143,3.748,145,1.332,146,1.332,147,2.453,153,1.612,156,1.515,157,1.476,158,1.022,159,1.654,161,0.978,168,3.383,169,1.458,170,1.458,171,1.945,172,1.902,174,1.902,183,3.383,185,1.945,204,2.453,205,1.757,206,1.757,207,1.18,208,2.325,209,1.18,211,1.18,212,1.18,213,0.818,214,1.18,215,0.818,216,1.18,217,0.818,218,1.18,219,0.818,220,1.18,221,1.18,239,2.1,249,1.757,250,1.18,254,1.455,257,1.945,267,1.902,268,2.171,269,4.069,270,3.406,271,4.508,272,4.508,273,2.288,274,3.406,275,4.508,276,2.288,277,3.406,278,3.406,279,3.406,280,2.288,281,3.406,282,3.406,283,3.406,284,2.885,285,2.288,286,1.757,287,2.288,288,2.288,289,2.288,290,1.458,291,1.902,292,1.902,293,1.902,294,1.902,295,1.902,296,3.406,297,2.288,298,2.288,299,2.288,300,1.648,301,1.648,302,1.648,303,1.648,304,5.053,305,3.406]],["title/classes/Invoice.html",[43,0.086,120,1.447]],["body/classes/Invoice.html",[12,0.035,16,0.343,17,0.239,18,0.203,21,0.402,23,0.203,37,1.223,42,0.465,43,0.122,44,0.014,45,0.02,46,0.014,53,0.783,54,1.019,63,0.655,64,0.783,66,1.665,76,1.892,81,2.476,93,0.543,94,1.341,98,1.665,106,1.223,110,1.395,112,3.07,115,1.276,116,1.465,119,0.783,120,2.846,121,1.276,122,1.663,124,1.223,125,1.663,145,1.438,146,0.855,156,1.811,157,1.665,158,1.704,159,1.665,232,1.03,234,1.663,235,1.663,237,2.622,239,1.019,240,1.88,241,1.88,243,1.88,246,1.88,248,1.88,249,2.878,250,2.622,251,1.88,253,1.88,254,1.876,255,2.622,256,3.293,257,2.903,258,3.662,259,1.115,260,1.115,261,1.88,262,2.701,263,1.88,264,1.88,265,1.88,266,1.88,306,1.49,307,2.61,308,2.61,309,2.61,310,2.61,311,2.61]],["title/components/MapPage.html",[68,0.473,213,1.104]],["body/components/MapPage.html",[4,0.482,12,0.035,13,0.75,16,0.176,17,0.176,18,0.149,21,0.377,23,0.149,31,0.527,32,2.385,42,0.176,43,0.053,44,0.01,45,0.016,46,0.01,55,1.196,59,1.427,63,0.748,64,1.632,66,0.628,68,0.559,69,0.686,70,1.396,71,0.99,72,0.99,73,0.99,74,0.99,84,1.702,85,1.884,86,0.99,87,2.626,89,1.537,91,1.537,93,0.4,94,1.065,97,1.608,98,1.712,100,1.702,103,2.351,109,3.331,110,1.352,112,2.54,113,1.561,114,1.561,115,1.119,116,0.75,119,0.576,121,1.235,136,1.596,145,0.628,146,0.628,153,0.686,156,0.894,157,0.976,158,1.096,159,1.612,161,0.82,166,1.096,167,0.99,169,1.223,170,1.223,171,1.096,173,2.478,185,1.096,189,2.478,205,1.537,206,1.537,207,0.99,208,2.3,209,0.99,211,0.99,212,0.99,213,1.472,214,0.99,215,0.686,216,0.99,217,0.686,218,0.99,219,0.686,220,0.99,221,0.99,235,2.841,257,1.096,286,0.99,301,1.382,302,1.382,312,1.382,313,4.157,314,3.653,315,2.98,316,5.09,317,4.118,318,4.118,319,4.118,320,1.919,321,4.232,322,2.98,323,1.919,324,2.98,325,3.037,326,5.09,327,0.99,328,1.919,329,2.98,330,2.624,331,1.712,332,2.98,333,1.919,334,2.146,335,1.919,336,3.653,337,1.919,338,1.919,339,1.919,340,1.919,341,1.382,342,2.478,343,2.694,344,1.382,345,0.99,346,1.919,347,1.919,348,1.919,349,1.919,350,1.919,351,2.98,352,1.919,353,1.919,354,1.919,355,1.919,356,1.919,357,1.919,358,2.98,359,1.919,360,1.919,361,1.919,362,1.919,363,1.382,364,1.919,365,1.919,366,1.919,367,1.919,368,1.919,369,2.98,370,1.919,371,1.919,372,1.919,373,1.919,374,1.919,375,1.919,376,1.919,377,1.919,378,1.919,379,1.919,380,3.653,381,1.919,382,1.919,383,1.919,384,1.919,385,1.919,386,1.919,387,3.037,388,1.919,389,1.919,390,2.98,391,1.919,392,1.919,393,1.919,394,2.98,395,1.919,396,1.919,397,1.919,398,1.919,399,1.919,400,1.919,401,1.919,402,1.919,403,1.919,404,1.919,405,1.596,406,1.919,407,1.919,408,1.919,409,2.98,410,1.919,411,1.919,412,1.919,413,1.223,414,1.919,415,1.919,416,1.919,417,2.478,418,1.919]],["title/modules/MapPageModule.html",[0,0.583,419,1.968]],["body/modules/MapPageModule.html",[0,0.745,2,1.184,3,1.411,4,0.99,5,2.315,6,1.686,7,1.686,8,1.411,12,0.035,13,1.936,14,1.686,15,1.686,16,0.361,17,0.361,18,0.307,20,1.541,21,0.547,22,1.936,23,0.307,28,1.411,29,2.323,31,1.083,42,0.361,43,0.11,44,0.021,45,0.027,46,0.021,50,1.849,51,1.937,55,0.903,56,1.849,68,0.604,213,2.169,226,2.557,227,1.849,228,2.557,229,1.849,231,2.036,419,3.809,420,3.281,421,3.281,422,3.946,423,3.946]],["title/classes/Note.html",[43,0.086,424,1.764]],["body/classes/Note.html",[12,0.035,16,0.177,17,0.177,18,0.151,21,0.336,23,0.151,37,0.909,42,0.379,43,0.083,44,0.01,45,0.016,46,0.01,53,1.344,54,0.758,55,1.169,63,0.754,64,1.344,66,1.717,76,0.694,93,0.404,94,1.074,98,1.467,100,1.716,110,1.23,115,1.039,116,1.618,119,0.582,121,1.189,145,0.635,146,0.635,156,1.661,157,1.619,158,1.573,159,1.552,161,1.77,166,2.365,167,2.137,184,1.001,185,1.108,232,0.825,237,2.312,239,2.093,254,1.284,255,2.635,256,2.917,259,0.829,260,0.829,268,1.236,286,2.445,303,1.397,306,1.108,330,1.236,331,0.909,345,2.55,413,1.236,424,3.5,425,1.397,426,2.499,427,4.455,428,3.228,429,1.94,430,1.94,431,1.94,432,3.444,433,1.94,434,1.94,435,1.108,436,4.247,437,1.397,438,2.165,439,3.617,440,1.613,441,1.613,442,1.613,443,1.397,444,1.613,445,1.613,446,1.613,447,1.613,448,1.613,449,1.613,450,1.613,451,2.165,452,2.499,453,1.613,454,1.613,455,1.613,456,3.444,457,3.444,458,2.499,459,1.613,460,1.397,461,1.613,462,1.397,463,1.613,464,1.613,465,1.397,466,3.058,467,1.613,468,1.613,469,1.613,470,1.613,471,1.613,472,1.613,473,4.247,474,2.499,475,1.613,476,1.613,477,2.499,478,1.613,479,1.613,480,2.499,481,1.613,482,1.613,483,2.499,484,2.499,485,2.499,486,1.613,487,1.613,488,1.613,489,1.613,490,1.613,491,1.613,492,1.613,493,1.613,494,1.613,495,1.613,496,1.915,497,1.613,498,1.613,499,1.613,500,1.613,501,1.613,502,1.613,503,1.613,504,1.613,505,1.397]],["title/components/NotesPage.html",[68,0.473,215,1.104]],["body/components/NotesPage.html",[4,0.527,12,0.035,16,0.192,17,0.192,18,0.163,21,0.354,23,0.163,31,0.577,32,2.456,42,0.192,43,0.058,44,0.011,45,0.017,46,0.011,59,0.821,63,0.802,64,0.958,68,0.711,69,0.751,70,1.497,71,1.084,72,1.084,73,1.084,74,1.084,76,0.751,84,1.824,85,1.994,86,1.084,87,2.703,89,1.648,91,1.648,93,0.438,94,1.142,97,1.248,98,1.847,103,2.466,107,3.866,110,1.473,113,1.985,114,1.985,115,1.228,116,1.51,119,0.958,121,1.276,124,2.024,133,3.214,134,1.747,145,1.266,146,1.266,153,0.751,156,0.63,157,1.266,158,0.958,159,1.414,161,1.652,166,2.207,167,1.994,175,1.747,184,1.084,205,1.648,206,1.648,207,1.084,208,2.228,209,1.084,211,1.084,212,1.084,213,0.751,214,1.084,215,1.544,216,1.084,217,0.751,218,1.084,219,0.751,220,1.084,221,1.084,239,1.911,255,1.084,268,2.036,284,2.794,286,1.994,290,1.339,327,1.084,334,2.301,363,2.784,424,2.794,435,2.992,439,3.546,460,2.301,462,1.513,506,1.747,507,3.195,508,3.866,509,3.195,510,3.866,511,3.59,512,3.195,513,3.195,514,4.319,515,2.101,516,2.101,517,3.195,518,2.101,519,4.893,520,3.195,521,2.101,522,4.319,523,3.195,524,2.101,525,3.195,526,2.101,527,4.646,528,2.101,529,2.101,530,2.101,531,3.214,532,2.101,533,2.101,534,2.101,535,2.101,536,2.101,537,3.195,538,2.101,539,2.101,540,2.101,541,2.101,542,3.195,543,2.101,544,3.195,545,3.195,546,2.101,547,3.195,548,3.195,549,2.101,550,2.101,551,2.101,552,2.101,553,2.101,554,2.101]],["title/modules/NotesPageModule.html",[0,0.583,555,1.968]],["body/modules/NotesPageModule.html",[0,0.745,2,1.184,3,1.411,4,0.99,5,2.315,6,1.686,7,1.686,8,1.411,12,0.035,13,1.936,14,1.686,15,1.686,16,0.361,17,0.361,18,0.307,20,1.541,21,0.547,22,1.936,23,0.307,28,1.411,29,2.323,31,1.083,42,0.361,43,0.11,44,0.021,45,0.027,46,0.021,50,1.849,51,1.937,55,0.903,56,1.849,68,0.604,215,2.169,226,2.557,227,1.849,228,2.557,229,1.849,231,2.036,555,3.809,556,3.281,557,3.281,558,3.946,559,3.946]],["title/injectables/NotesService.html",[232,0.848,435,1.764]],["body/injectables/NotesService.html",[12,0.035,16,0.162,17,0.162,18,0.138,21,0.317,23,0.138,37,0.83,42,0.317,43,0.078,44,0.01,45,0.015,46,0.01,53,1.485,54,0.691,55,1.133,63,0.989,64,1.287,66,1.669,93,0.369,97,1.092,98,1.842,100,1.98,110,1.359,113,1.833,114,1.833,115,1.077,116,1.676,119,0.531,121,1.379,156,1.624,157,1.564,158,1.648,159,1.494,161,1.683,166,2.25,167,2.033,184,0.913,185,1.597,232,0.768,233,1.011,237,2.629,239,1.676,254,0.756,255,2.464,256,2.981,259,0.756,260,0.756,268,1.783,286,2.033,303,2.015,327,0.913,330,1.128,331,1.311,345,2.033,413,1.128,424,3.483,425,1.275,426,1.472,427,3.971,428,2.015,432,2.325,435,1.597,436,4.427,437,2.015,438,2.838,439,3.707,440,1.472,441,1.472,442,2.325,443,2.015,444,1.472,445,1.472,446,1.472,447,2.325,448,3.276,449,1.472,450,1.472,451,2.498,452,2.325,453,1.472,454,1.472,455,1.472,456,3.276,457,3.276,458,2.325,459,1.472,460,1.275,461,1.472,462,1.275,463,1.472,464,1.472,465,1.275,466,2.883,467,1.472,468,1.472,469,1.472,470,1.472,471,1.472,472,1.472,473,4.117,474,2.325,475,1.472,476,1.472,477,2.325,478,1.472,479,1.472,480,2.883,481,3.276,482,1.472,483,2.325,484,2.325,485,2.325,486,1.472,487,1.472,488,1.472,489,1.472,490,1.472,491,1.472,492,1.472,493,1.472,494,2.325,495,1.472,496,1.783,497,1.472,498,1.472,499,1.472,500,2.325,501,1.472,502,1.472,503,2.325,504,1.472,505,1.275,511,2.325,560,2.797,561,2.797,562,2.325,563,1.77,564,1.77,565,1.77,566,1.77,567,1.77,568,1.77,569,1.77,570,1.77,571,1.77,572,1.77,573,1.77]],["title/components/OverviewPage.html",[68,0.473,217,1.104]],["body/components/OverviewPage.html",[4,0.887,12,0.035,16,0.323,17,0.323,18,0.275,21,0.323,23,0.275,32,2.811,42,0.323,43,0.098,44,0.019,45,0.025,46,0.019,59,1.381,63,0.887,68,0.788,69,1.264,70,2.165,71,1.824,72,1.824,73,1.824,74,1.824,76,1.264,84,2.638,85,2.654,86,1.824,87,3.095,89,2.383,91,2.383,103,2.019,114,1.974,153,1.264,205,2.383,206,2.383,207,1.824,208,2.814,209,1.824,211,1.824,212,1.824,213,1.264,214,1.824,215,1.264,216,1.824,217,1.95,218,1.824,219,1.264,220,1.824,221,1.824,341,3.327,574,2.939,575,3.7,576,5.146,577,4.62,578,3.84,579,4.62,580,4.62,581,4.62,582,4.62,583,4.62,584,4.62,585,4.62,586,4.62,587,4.62]],["title/modules/OverviewPageModule.html",[0,0.583,588,1.968]],["body/modules/OverviewPageModule.html",[0,0.745,2,1.184,3,1.411,4,0.99,5,2.315,6,1.686,7,1.686,8,1.411,12,0.035,13,1.936,14,1.686,15,1.686,16,0.361,17,0.361,18,0.307,20,1.541,21,0.547,22,1.936,23,0.307,28,1.411,29,2.323,31,1.083,42,0.361,43,0.11,44,0.021,45,0.027,46,0.021,50,1.849,51,1.937,55,0.903,56,1.849,68,0.604,217,2.169,226,2.557,227,1.849,228,2.557,229,1.849,231,2.036,588,3.809,589,3.281,590,3.281,591,3.946,592,3.946]],["title/injectables/PositionService.html",[232,0.848,593,1.968]],["body/injectables/PositionService.html",[12,0.035,16,0.37,17,0.37,18,0.314,21,0.37,23,0.314,42,0.37,43,0.14,44,0.022,45,0.027,46,0.022,66,1.325,93,0.843,97,1.966,110,1.111,119,1.214,121,1.263,146,1.325,158,1.644,171,2.31,232,1.382,233,2.31,259,1.729,260,1.729,327,2.087,331,2.568,343,2.31,593,3.209,594,3.364,595,4.768,596,4.046,597,5.035,598,4.186,599,5.481,600,4.046,601,4.046,602,4.046,603,4.046,604,4.046,605,4.046]],["title/components/SettingsPage.html",[68,0.473,219,1.104]],["body/components/SettingsPage.html",[4,0.59,12,0.035,16,0.215,17,0.215,18,0.183,21,0.446,23,0.183,28,0.841,31,0.646,32,2.54,42,0.215,43,0.065,44,0.013,45,0.019,46,0.013,52,4.507,53,1.66,54,0.919,55,0.538,59,2.117,63,0.872,64,1.37,66,0.77,68,0.746,69,0.841,70,1.629,71,1.213,72,1.213,73,1.213,74,1.213,76,0.841,83,2.891,84,1.985,85,2.134,86,1.213,87,2.796,89,1.794,91,1.794,93,0.49,94,1.243,95,2.979,97,1.358,98,1.354,103,2.609,108,3.987,109,3.528,110,1.401,112,2.796,113,1.767,114,1.767,115,1.281,116,0.919,121,1.038,124,1.629,145,1.596,146,1.354,147,2.504,150,1.956,153,0.841,155,1.956,156,1.689,157,1.496,158,0.705,159,1.138,169,1.499,170,1.499,171,1.343,204,2.504,205,1.794,206,1.794,207,1.213,208,2.357,209,1.213,211,1.213,212,1.213,213,0.841,214,1.213,215,0.841,216,1.213,217,0.841,218,1.213,219,1.633,220,1.213,221,1.213,249,2.357,250,2.515,291,1.956,292,1.956,293,1.956,294,1.956,295,1.956,301,1.694,302,1.694,327,1.213,331,1.629,334,2.504,345,2.724,363,1.694,413,1.499,496,2.216,606,1.956,607,3.477,608,4.136,609,3.477,610,3.439,611,4.243,612,2.352,613,3.477,614,2.352,615,2.352,616,2.891,617,2.352,618,2.352,619,2.891,620,1.956,621,2.352,622,2.352,623,2.352,624,2.352,625,2.352,626,2.352,627,2.352]],["title/modules/SettingsPageModule.html",[0,0.583,628,1.968]],["body/modules/SettingsPageModule.html",[0,0.745,2,1.184,3,1.411,4,0.99,5,2.315,6,1.686,7,1.686,8,1.411,12,0.035,13,1.936,14,1.686,15,1.686,16,0.361,17,0.361,18,0.307,20,1.541,21,0.547,22,1.936,23,0.307,28,1.411,29,2.323,31,1.083,42,0.361,43,0.11,44,0.021,45,0.027,46,0.021,50,1.849,51,1.937,55,0.903,56,1.849,68,0.604,219,2.169,226,2.557,227,1.849,228,2.557,229,1.849,231,2.036,628,3.809,629,3.281,630,3.281,631,3.946,632,3.946]],["title/injectables/SettingsService.html",[53,0.926,232,0.848]],["body/injectables/SettingsService.html",[12,0.035,16,0.288,17,0.288,18,0.245,21,0.288,23,0.245,42,0.288,43,0.087,44,0.017,45,0.023,46,0.017,53,1.283,55,0.721,63,1.219,66,1.032,93,0.656,94,1.53,97,1.671,110,1.496,115,1.307,121,1.074,145,1.84,146,1.706,156,1.563,161,1.346,232,1.175,233,1.799,239,2.194,249,2.207,250,2.506,254,1.828,259,1.346,260,1.346,284,2.975,290,2.008,300,2.27,327,1.626,345,2.899,437,3.082,443,3.082,562,3.557,610,4.671,611,4.671,619,3.557,620,3.557,633,2.62,634,4.671,635,4.858,636,3.151,637,3.151,638,4.279,639,4.279,640,4.858,641,4.279,642,4.279,643,3.151,644,3.151,645,3.151,646,3.151,647,3.151,648,4.279,649,3.151,650,3.151,651,3.151,652,3.151,653,3.151,654,3.151]],["title/classes/Sum.html",[43,0.086,81,1.593]],["body/classes/Sum.html",[12,0.035,16,0.36,17,0.255,18,0.217,21,0.416,23,0.217,37,1.306,42,0.452,43,0.126,44,0.015,45,0.021,46,0.015,53,0.836,54,1.089,63,0.699,64,0.836,66,1.707,76,1.628,81,2.928,93,0.581,94,1.405,98,1.707,106,1.306,110,1.079,112,3.051,115,0.986,119,0.836,120,2.84,121,1.308,122,1.777,124,1.306,125,1.777,145,0.913,156,1.774,157,1.707,158,1.731,159,1.707,232,1.079,234,1.777,235,1.777,237,2.689,239,1.089,240,2.008,241,2.008,243,2.008,246,2.008,248,2.008,249,2.928,250,2.349,251,2.008,253,2.008,254,1.945,255,2.028,256,3.241,257,2.245,258,2.831,259,1.191,260,1.191,261,2.008,262,2.831,263,2.008,264,2.008,265,2.008,266,2.008,306,1.592,655,2.788,656,2.788]],["title/modules/TabsPageModule.html",[0,0.583,657,1.968]],["body/modules/TabsPageModule.html",[0,0.753,2,1.195,3,1.425,4,1,5,2.326,6,1.703,7,1.703,8,1.425,12,0.035,13,1.948,14,1.703,15,1.703,16,0.365,17,0.365,18,0.31,20,1.948,21,0.548,22,1.948,23,0.31,29,2.337,31,1.094,42,0.365,43,0.111,44,0.021,45,0.027,46,0.021,226,2.573,227,1.868,228,2.573,229,1.868,657,3.917,658,3.313,659,3.313,660,3.313,661,4.316,662,3.421,663,3.986,664,3.986,665,3.313]],["title/modules/TabsPageRoutingModule.html",[0,0.583,662,1.764]],["body/modules/TabsPageRoutingModule.html",[2,1.067,8,1.272,12,0.035,16,0.326,17,0.326,18,0.277,20,1.39,21,0.472,22,1.812,23,0.277,28,1.272,42,0.326,43,0.099,44,0.019,45,0.025,46,0.019,50,2.174,51,1.845,55,0.815,56,2.926,57,4.716,59,1.39,60,2.959,68,0.545,88,2.959,231,1.836,313,2.563,439,2.268,575,2.268,661,3.342,662,2.649,665,2.959,666,3.559,667,3.559,668,5.817,669,3.559,670,3.559,671,3.559,672,3.559,673,4.64,674,4.64,675,4.64,676,4.64]],["title/classes/UserPosition.html",[43,0.086,677,2.225]],["body/classes/UserPosition.html",[12,0.035,16,0.325,17,0.222,18,0.188,21,0.451,23,0.188,37,1.136,42,0.451,43,0.129,44,0.013,45,0.019,46,0.013,53,1.48,54,0.947,55,0.555,59,0.947,63,0.608,64,1.64,66,1.616,76,0.866,93,0.505,94,1.271,98,1.616,110,0.976,113,1.036,115,1.238,119,1.066,121,1.238,156,1.39,157,1.518,158,1.64,159,1.689,161,1.036,167,1.25,184,1.25,203,2.015,232,0.976,237,2.546,239,2.135,254,1.036,259,1.036,260,1.036,284,2.403,286,1.833,290,1.545,300,1.746,306,1.384,321,2.955,330,1.545,331,2.313,343,3.512,345,2.661,387,3.854,405,2.015,428,1.746,438,1.746,451,1.746,465,1.746,496,1.545,505,1.746,531,2.015,578,2.015,593,3.146,595,2.015,598,2.015,634,2.955,677,3.555,678,2.015,679,2.424,680,2.424,681,4.209,682,2.015,683,2.424,684,2.424,685,2.424,686,2.424,687,2.424,688,2.424,689,2.424,690,2.424,691,2.424,692,3.554,693,2.424,694,2.424,695,3.554,696,2.424,697,2.424,698,2.424,699,2.424,700,2.424,701,2.424,702,2.424,703,2.424,704,2.424,705,2.424,706,2.424,707,2.424,708,2.424,709,2.424,710,2.424,711,2.424,712,2.424,713,2.424,714,2.424,715,2.424,716,2.424,717,2.424,718,2.424,719,2.424,720,2.424,721,2.424,722,2.424,723,2.424]],["title/coverage.html",[724,3.509]],["body/coverage.html",[12,0.034,18,0.285,43,0.154,44,0.02,45,0.025,46,0.02,53,1.099,68,0.898,69,1.31,75,3.047,81,1.891,106,1.717,115,0.92,119,1.099,120,1.717,153,1.31,191,3.047,213,1.31,215,1.31,217,1.31,219,1.31,232,1.518,234,3.336,267,3.047,284,2.989,312,3.406,344,3.406,417,5.186,424,2.093,425,3.406,435,2.093,506,3.047,574,3.047,593,2.336,594,3.047,606,3.047,633,3.047,677,2.64,678,3.047,724,3.047,725,3.665,726,3.665,727,3.665,728,4.729,729,4.729,730,4.729,731,4.729,732,3.665,733,3.665,734,4.729,735,3.665,736,3.665,737,5.726,738,3.665,739,3.665,740,3.665,741,3.665,742,3.665,743,3.047,744,3.047,745,3.665,746,3.047,747,3.931,748,3.047,749,3.665]],["title/dependencies.html",[3,1.328,750,2.577]],["body/dependencies.html",[3,1.52,12,0.035,23,0.33,25,4.315,26,3.738,28,1.52,31,1.167,44,0.023,45,0.028,46,0.023,227,1.992,229,1.992,325,3.534,682,3.534,751,6.163,752,4.251,753,4.251,754,5.603,755,4.251,756,5.603,757,4.251,758,4.251,759,4.251,760,4.251,761,4.251,762,4.251,763,4.251,764,4.251,765,4.251,766,4.251,767,4.251,768,4.251,769,4.251,770,4.251]],["title/miscellaneous/functions.html",[771,1.642,772,3.089]],["body/miscellaneous/functions.html",[12,0.032,44,0.026,45,0.03,46,0.026,93,1,121,1.205,343,3.187,743,3.991,744,4.64,746,4.905,771,3.06,772,3.991,773,4.801,774,4.801]],["title/index.html",[93,0.643,575,1.968]],["body/index.html",[0,0.713,1,3.565,2,1.133,3,1.351,4,0.948,5,1.614,6,1.614,7,1.614,8,1.351,9,3.141,10,3.141,11,3.033,12,0.033,13,1.883,14,1.614,15,1.614,44,0.02,45,0.026,46,0.02,51,1.351,69,1.899,70,1.77,153,1.899,213,1.899,215,1.899,217,1.899,219,1.899,222,3.767,223,3.141,224,3.141,233,2.157,306,2.157,419,3.565,420,3.141,421,3.141,555,3.565,556,3.141,557,3.141,575,2.408,588,3.565,589,3.141,590,3.141,628,3.565,629,3.141,630,3.141,657,3.767,658,3.141,659,3.141,660,3.141,661,3.825,662,3.033,775,3.778,776,3.778,777,4.822,778,3.778]],["title/modules.html",[2,1.266]],["body/modules.html",[1,2.814,2,1.324,11,2.521,12,0.029,26,4.474,44,0.024,45,0.029,46,0.024,222,2.814,419,2.814,555,2.814,588,2.814,616,4.416,628,2.814,657,2.814,662,2.521,779,6.211,780,6.211,781,6.306,782,5.312]],["title/routes.html",[51,1.509]],["body/routes.html",[12,0.031,44,0.027,45,0.031,46,0.027,51,1.792]],["title/miscellaneous/variables.html",[771,1.642,783,3.089]],["body/miscellaneous/variables.html",[12,0.033,44,0.024,45,0.029,46,0.024,93,0.948,115,1.357,145,1.491,146,1.491,184,2.349,312,3.28,313,3.28,331,2.134,341,3.28,342,3.786,343,2.601,344,4.392,747,3.786,748,4.498,771,2.902,783,3.786,784,5.411,785,4.555,786,4.555,787,4.555,788,4.555,789,4.555,790,4.555]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":648,"title":{},"body":{"injectables/SettingsService.html":{}}}],["0.8.29",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":413,"title":{},"body":{"components/MapPage.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{}}}],["1.5.1",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":417,"title":{},"body":{"components/MapPage.html":{},"coverage.html":{}}}],["1000",{"_index":462,"title":{},"body":{"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{}}}],["11/12",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":356,"title":{},"body":{"components/MapPage.html":{}}}],["2",{"_index":203,"title":{},"body":{"components/CashboxPage.html":{},"classes/UserPosition.html":{}}}],["2.5.4",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":694,"title":{},"body":{"classes/UserPosition.html":{}}}],["25px",{"_index":549,"title":{},"body":{"components/NotesPage.html":{}}}],["2x.png",{"_index":382,"title":{},"body":{"components/MapPage.html":{}}}],["3/3",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":777,"title":{},"body":{"index.html":{}}}],["4.1.0",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":778,"title":{},"body":{"index.html":{}}}],["5.0.0",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":551,"title":{},"body":{"components/NotesPage.html":{}}}],["6",{"_index":776,"title":{},"body":{"index.html":{}}}],["6.5.1",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":376,"title":{},"body":{"components/MapPage.html":{}}}],["7.2.2",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":775,"title":{},"body":{"index.html":{}}}],["91",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["accessors",{"_index":562,"title":{},"body":{"injectables/NotesService.html":{},"injectables/SettingsService.html":{}}}],["actual",{"_index":710,"title":{},"body":{"classes/UserPosition.html":{}}}],["actual_component",{"_index":221,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["ad",{"_index":243,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["add",{"_index":118,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{}}}],["add(invoice",{"_index":241,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["adding",{"_index":268,"title":{},"body":{"components/EditorComponent.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{}}}],["addinvoice",{"_index":99,"title":{},"body":{"components/CashboxPage.html":{}}}],["addnote",{"_index":511,"title":{},"body":{"components/NotesPage.html":{},"injectables/NotesService.html":{}}}],["addnote(note",{"_index":494,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["addto(this.map",{"_index":397,"title":{},"body":{"components/MapPage.html":{}}}],["aga",{"_index":641,"title":{},"body":{"injectables/SettingsService.html":{}}}],["alarmctrl",{"_index":361,"title":{},"body":{"components/MapPage.html":{}}}],["alarmctrl.present",{"_index":371,"title":{},"body":{"components/MapPage.html":{}}}],["alert",{"_index":168,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{}}}],["alert.present",{"_index":174,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{}}}],["alertcontroller",{"_index":109,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/SettingsPage.html":{}}}],["allnotes",{"_index":448,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["already",{"_index":389,"title":{},"body":{"components/MapPage.html":{}}}],["amount",{"_index":305,"title":{},"body":{"components/EditorComponent.html":{}}}],["angular",{"_index":136,"title":{},"body":{"components/CashboxPage.html":{},"components/MapPage.html":{}}}],["angular/common",{"_index":227,"title":{},"body":{"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":229,"title":{},"body":{"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["app.component",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["applyleafletproductionbuildhack",{"_index":317,"title":{},"body":{"components/MapPage.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":11,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["aresettingsvalid",{"_index":635,"title":{},"body":{"injectables/SettingsService.html":{}}}],["array",{"_index":438,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{},"classes/UserPosition.html":{}}}],["array.isarray(notes",{"_index":441,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["async",{"_index":98,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["available",{"_index":616,"title":{},"body":{"components/SettingsPage.html":{},"modules.html":{}}}],["availablecurrencies",{"_index":95,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/SettingsPage.html":{}}}],["await",{"_index":159,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["backdropdismiss",{"_index":362,"title":{},"body":{"components/MapPage.html":{}}}],["bar",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["bindpopup(`${position.username",{"_index":398,"title":{},"body":{"components/MapPage.html":{}}}],["body",{"_index":495,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["body).topromise",{"_index":497,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["body.offline",{"_index":498,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["boolean",{"_index":290,"title":{},"body":{"components/EditorComponent.html":{},"components/NotesPage.html":{},"injectables/SettingsService.html":{},"classes/UserPosition.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"index.html":{}}}],["browse",{"_index":781,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":519,"title":{},"body":{"components/NotesPage.html":{}}}],["buttons",{"_index":301,"title":{},"body":{"components/EditorComponent.html":{},"components/MapPage.html":{},"components/SettingsPage.html":{}}}],["cache",{"_index":480,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["cachednotes",{"_index":436,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["cachednotes(notes",{"_index":444,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["cachednotes.push(body",{"_index":499,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["cachednotes.splice(cachednotes.indexof(note",{"_index":493,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["calls",{"_index":137,"title":{},"body":{"components/CashboxPage.html":{}}}],["cancel",{"_index":698,"title":{},"body":{"classes/UserPosition.html":{}}}],["cashbox",{"_index":88,"title":{},"body":{"components/CashboxPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["cashbox'},{'name",{"_index":211,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["cashbox.page",{"_index":230,"title":{},"body":{"modules/CashboxPageModule.html":{}}}],["cashbox.page.html",{"_index":92,"title":{},"body":{"components/CashboxPage.html":{}}}],["cashbox.page.scss",{"_index":90,"title":{},"body":{"components/CashboxPage.html":{}}}],["cashbox.service",{"_index":152,"title":{},"body":{"components/CashboxPage.html":{}}}],["cashbox/cashbox.module#cashboxpagemodule",{"_index":671,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["cashboxpage",{"_index":69,"title":{"components/CashboxPage.html":{}},"body":{"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{},"coverage.html":{},"index.html":{}}}],["cashboxpagemodule",{"_index":222,"title":{"modules/CashboxPageModule.html":{}},"body":{"modules/CashboxPageModule.html":{},"index.html":{},"modules.html":{}}}],["cashboxservice",{"_index":106,"title":{"injectables/CashboxService.html":{}},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"classes/Sum.html":{},"coverage.html":{}}}],["catch",{"_index":166,"title":{},"body":{"components/CashboxPage.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{}}}],["catch(e",{"_index":300,"title":{},"body":{"components/EditorComponent.html":{},"injectables/SettingsService.html":{},"classes/UserPosition.html":{}}}],["center",{"_index":353,"title":{},"body":{"components/MapPage.html":{}}}],["changes",{"_index":684,"title":{},"body":{"classes/UserPosition.html":{}}}],["chasing",{"_index":697,"title":{},"body":{"classes/UserPosition.html":{}}}],["children",{"_index":668,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["class",{"_index":43,"title":{"classes/Invoice.html":{},"classes/Note.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{},"coverage.html":{}}}],["classes",{"_index":306,"title":{},"body":{"classes/Invoice.html":{},"classes/Note.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{},"index.html":{}}}],["clearinterval(this.timer",{"_index":700,"title":{},"body":{"classes/UserPosition.html":{}}}],["close",{"_index":271,"title":{},"body":{"components/EditorComponent.html":{}}}],["closing",{"_index":282,"title":{},"body":{"components/EditorComponent.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_cashboxpagemodule",{"_index":223,"title":{},"body":{"modules/CashboxPageModule.html":{},"index.html":{}}}],["cluster_cashboxpagemodule_declarations",{"_index":224,"title":{},"body":{"modules/CashboxPageModule.html":{},"index.html":{}}}],["cluster_mappagemodule",{"_index":420,"title":{},"body":{"modules/MapPageModule.html":{},"index.html":{}}}],["cluster_mappagemodule_declarations",{"_index":421,"title":{},"body":{"modules/MapPageModule.html":{},"index.html":{}}}],["cluster_notespagemodule",{"_index":556,"title":{},"body":{"modules/NotesPageModule.html":{},"index.html":{}}}],["cluster_notespagemodule_declarations",{"_index":557,"title":{},"body":{"modules/NotesPageModule.html":{},"index.html":{}}}],["cluster_overviewpagemodule",{"_index":589,"title":{},"body":{"modules/OverviewPageModule.html":{},"index.html":{}}}],["cluster_overviewpagemodule_declarations",{"_index":590,"title":{},"body":{"modules/OverviewPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule",{"_index":629,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_declarations",{"_index":630,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_tabspagemodule",{"_index":658,"title":{},"body":{"modules/TabsPageModule.html":{},"index.html":{}}}],["cluster_tabspagemodule_declarations",{"_index":659,"title":{},"body":{"modules/TabsPageModule.html":{},"index.html":{}}}],["cluster_tabspagemodule_imports",{"_index":660,"title":{},"body":{"modules/TabsPageModule.html":{},"index.html":{}}}],["cnstructor",{"_index":240,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["collect",{"_index":400,"title":{},"body":{"components/MapPage.html":{}}}],["color",{"_index":552,"title":{},"body":{"components/NotesPage.html":{}}}],["commonmodule",{"_index":226,"title":{},"body":{"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{}}}],["component",{"_index":68,"title":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}},"body":{"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":209,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["componentprops",{"_index":180,"title":{},"body":{"components/CashboxPage.html":{}}}],["components",{"_index":70,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{},"index.html":{}}}],["console.error(\"error",{"_index":717,"title":{},"body":{"classes/UserPosition.html":{}}}],["console.error(e",{"_index":360,"title":{},"body":{"components/MapPage.html":{}}}],["const",{"_index":55,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"modules/OverviewPageModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{}}}],["constructor",{"_index":63,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["constructor(cashboxservice",{"_index":105,"title":{},"body":{"components/CashboxPage.html":{}}}],["constructor(httpclient",{"_index":236,"title":{},"body":{"injectables/CashboxService.html":{}}}],["constructor(mapservice",{"_index":320,"title":{},"body":{"components/MapPage.html":{}}}],["constructor(modalcontroller",{"_index":273,"title":{},"body":{"components/EditorComponent.html":{}}}],["constructor(notesservice",{"_index":515,"title":{},"body":{"components/NotesPage.html":{}}}],["constructor(router",{"_index":612,"title":{},"body":{"components/SettingsPage.html":{}}}],["constructor(settingsservice",{"_index":563,"title":{},"body":{"injectables/NotesService.html":{}}}],["context",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":623,"title":{},"body":{"components/SettingsPage.html":{}}}],["controller.present",{"_index":625,"title":{},"body":{"components/SettingsPage.html":{}}}],["convert",{"_index":463,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["coords",{"_index":705,"title":{},"body":{"classes/UserPosition.html":{}}}],["core",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":258,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["coverage",{"_index":724,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":185,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["createposition",{"_index":746,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":139,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{}}}],["ctrl",{"_index":187,"title":{},"body":{"components/CashboxPage.html":{}}}],["ctrl.onwilldismiss",{"_index":196,"title":{},"body":{"components/CashboxPage.html":{}}}],["ctrl.present",{"_index":195,"title":{},"body":{"components/CashboxPage.html":{}}}],["currencies",{"_index":83,"title":{},"body":{"components/CashboxPage.html":{},"components/SettingsPage.html":{}}}],["currency",{"_index":249,"title":{},"body":{"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{}}}],["currency.service",{"_index":155,"title":{},"body":{"components/CashboxPage.html":{},"components/SettingsPage.html":{}}}],["currencyservice",{"_index":108,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/SettingsPage.html":{}}}],["current",{"_index":598,"title":{},"body":{"injectables/PositionService.html":{},"classes/UserPosition.html":{}}}],["currentusername",{"_index":411,"title":{},"body":{"components/MapPage.html":{}}}],["currentusernames",{"_index":409,"title":{},"body":{"components/MapPage.html":{}}}],["da",{"_index":488,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["dann",{"_index":454,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["data",{"_index":254,"title":{},"body":{"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["date",{"_index":432,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["date(note.timestamp",{"_index":461,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["date:'medium",{"_index":543,"title":{},"body":{"components/NotesPage.html":{}}}],["date:\\'medium",{"_index":554,"title":{},"body":{"components/NotesPage.html":{}}}],["db",{"_index":426,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["declaration",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"index.html":{}}}],["declare",{"_index":112,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"components/SettingsPage.html":{},"classes/Sum.html":{}}}],["default",{"_index":145,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"miscellaneous/variables.html":{}}}],["defaultcurrency",{"_index":610,"title":{},"body":{"components/SettingsPage.html":{},"injectables/SettingsService.html":{}}}],["define",{"_index":239,"title":{},"body":{"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["defined",{"_index":110,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["delete",{"_index":100,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/MapPage.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["delete(invoice",{"_index":122,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["deletemessage",{"_index":512,"title":{},"body":{"components/NotesPage.html":{}}}],["deletemessage(id",{"_index":520,"title":{},"body":{"components/NotesPage.html":{}}}],["deletenote",{"_index":560,"title":{},"body":{"injectables/NotesService.html":{}}}],["deletenote(id",{"_index":500,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["deleting",{"_index":125,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["der",{"_index":452,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["description",{"_index":76,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["different",{"_index":82,"title":{},"body":{"components/CashboxPage.html":{}}}],["directive",{"_index":207,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["directives",{"_index":220,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["dismiss",{"_index":277,"title":{},"body":{"components/EditorComponent.html":{}}}],["dismissed",{"_index":194,"title":{},"body":{"components/CashboxPage.html":{}}}],["documentation",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":73,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["download",{"_index":455,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["dynamic",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":167,"title":{},"body":{"components/CashboxPage.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"classes/UserPosition.html":{}}}],["edit",{"_index":101,"title":{},"body":{"components/CashboxPage.html":{}}}],["edit(invoice",{"_index":126,"title":{},"body":{"components/CashboxPage.html":{}}}],["editing",{"_index":129,"title":{},"body":{"components/CashboxPage.html":{}}}],["editor",{"_index":143,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{}}}],["editor'},{'name",{"_index":212,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["editor.component.html",{"_index":270,"title":{},"body":{"components/EditorComponent.html":{}}}],["editor.component.scss",{"_index":269,"title":{},"body":{"components/EditorComponent.html":{}}}],["editor/editor.component",{"_index":154,"title":{},"body":{"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{}}}],["editorcomponent",{"_index":153,"title":{"components/EditorComponent.html":{}},"body":{"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{},"coverage.html":{},"index.html":{}}}],["element",{"_index":206,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["enable",{"_index":365,"title":{},"body":{"components/MapPage.html":{}}}],["entrycomponents",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/CashboxPageModule.html":{}}}],["env",{"_index":375,"title":{},"body":{"components/MapPage.html":{}}}],["epoch",{"_index":464,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["erfolgreich",{"_index":490,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["error",{"_index":171,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{}}}],["eur",{"_index":250,"title":{},"body":{"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{}}}],["euro",{"_index":642,"title":{},"body":{"injectables/SettingsService.html":{}}}],["example",{"_index":639,"title":{},"body":{"injectables/SettingsService.html":{}}}],["expense",{"_index":304,"title":{},"body":{"components/EditorComponent.html":{}}}],["export",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"index.html":{}}}],["false",{"_index":286,"title":{},"body":{"components/EditorComponent.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"classes/UserPosition.html":{}}}],["fetching",{"_index":719,"title":{},"body":{"classes/UserPosition.html":{}}}],["fetchpositions",{"_index":722,"title":{},"body":{"classes/UserPosition.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{},"coverage.html":{}}}],["find",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fo",{"_index":128,"title":{},"body":{"components/CashboxPage.html":{}}}],["formsmodule",{"_index":228,"title":{},"body":{"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{}}}],["found",{"_index":373,"title":{},"body":{"components/MapPage.html":{}}}],["full",{"_index":676,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["function",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":772,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gbp",{"_index":292,"title":{},"body":{"components/EditorComponent.html":{},"components/SettingsPage.html":{}}}],["gecachte",{"_index":478,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["generate",{"_index":517,"title":{},"body":{"components/NotesPage.html":{}}}],["geolocation",{"_index":366,"title":{},"body":{"components/MapPage.html":{}}}],["getaresettingsvalid",{"_index":645,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getcachednotes",{"_index":570,"title":{},"body":{"injectables/NotesService.html":{}}}],["getcurrentposition",{"_index":595,"title":{},"body":{"injectables/PositionService.html":{},"classes/UserPosition.html":{}}}],["getinvoicesandsum",{"_index":102,"title":{},"body":{"components/CashboxPage.html":{}}}],["getinvoicesandsum(refreshevent",{"_index":130,"title":{},"body":{"components/CashboxPage.html":{}}}],["getting",{"_index":600,"title":{},"body":{"injectables/PositionService.html":{}}}],["graph",{"_index":782,"title":{},"body":{"modules.html":{}}}],["gruppe",{"_index":582,"title":{},"body":{"components/OverviewPage.html":{}}}],["handling",{"_index":507,"title":{},"body":{"components/NotesPage.html":{}}}],["header",{"_index":170,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/SettingsPage.html":{}}}],["height",{"_index":418,"title":{},"body":{"components/MapPage.html":{}}}],["helpers.ts",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["hochgeladen",{"_index":491,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["html",{"_index":205,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["htmlionmodalelement",{"_index":186,"title":{},"body":{"components/CashboxPage.html":{}}}],["httpclient",{"_index":237,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["httpclientmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["https://stackoverflow.com/questions/56411497/leaflet",{"_index":372,"title":{},"body":{"components/MapPage.html":{}}}],["icon",{"_index":381,"title":{},"body":{"components/MapPage.html":{}}}],["icon.png",{"_index":384,"title":{},"body":{"components/MapPage.html":{}}}],["iconretinaurl",{"_index":379,"title":{},"body":{"components/MapPage.html":{}}}],["iconurl",{"_index":383,"title":{},"body":{"components/MapPage.html":{}}}],["id",{"_index":255,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"classes/Sum.html":{}}}],["id).topromise",{"_index":502,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["identifier",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["if(!this.issetup",{"_index":699,"title":{},"body":{"classes/UserPosition.html":{}}}],["if(!this.settingsservice.aresettingsvalid",{"_index":622,"title":{},"body":{"components/SettingsPage.html":{}}}],["if(this.isediting",{"_index":297,"title":{},"body":{"components/EditorComponent.html":{}}}],["if(this.issetup",{"_index":690,"title":{},"body":{"classes/UserPosition.html":{}}}],["if(this.router.url.indexof(\"tabs",{"_index":626,"title":{},"body":{"components/SettingsPage.html":{}}}],["if(this.settingsservice.aresettingsvalid",{"_index":65,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ignore",{"_index":578,"title":{},"body":{"components/OverviewPage.html":{},"classes/UserPosition.html":{}}}],["implements",{"_index":84,"title":{},"body":{"components/CashboxPage.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["index",{"_index":93,"title":{"index.html":{}},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{}}}],["information",{"_index":597,"title":{},"body":{"injectables/PositionService.html":{}}}],["injectable",{"_index":232,"title":{"injectables/CashboxService.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"injectables/SettingsService.html":{}},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{},"coverage.html":{}}}],["injectables",{"_index":233,"title":{},"body":{"injectables/CashboxService.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["invoce",{"_index":253,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["invoces",{"_index":248,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["invoice",{"_index":120,"title":{"classes/Invoice.html":{}},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"classes/Sum.html":{},"coverage.html":{}}}],["invoice).topromise",{"_index":262,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["invoice.cost",{"_index":198,"title":{},"body":{"components/CashboxPage.html":{}}}],["invoice.currency",{"_index":199,"title":{},"body":{"components/CashboxPage.html":{}}}],["invoice.description",{"_index":197,"title":{},"body":{"components/CashboxPage.html":{}}}],["invoice.title",{"_index":179,"title":{},"body":{"components/CashboxPage.html":{}}}],["invoices",{"_index":78,"title":{},"body":{"components/CashboxPage.html":{}}}],["invoicetoedit",{"_index":144,"title":{},"body":{"components/CashboxPage.html":{}}}],["ionic",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["ionic/angular",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{}}}],["ionicmodule.forroot",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["ionrefresher",{"_index":533,"title":{},"body":{"components/NotesPage.html":{}}}],["isediting",{"_index":183,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{}}}],["isoffline",{"_index":550,"title":{},"body":{"components/NotesPage.html":{}}}],["issetup",{"_index":686,"title":{},"body":{"classes/UserPosition.html":{}}}],["item.value",{"_index":204,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/SettingsPage.html":{}}}],["js",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":443,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{},"injectables/SettingsService.html":{}}}],["json.parse(localstorage.getitem(\"settings",{"_index":651,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.parse(localstorage.getitem('cachednotes",{"_index":440,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["json.stringify",{"_index":640,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(notes",{"_index":446,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["l",{"_index":340,"title":{},"body":{"components/MapPage.html":{}}}],["l.icon.default.mergeoptions",{"_index":378,"title":{},"body":{"components/MapPage.html":{}}}],["l.icon.default.prototype._geticonurl",{"_index":377,"title":{},"body":{"components/MapPage.html":{}}}],["l.map(\"map",{"_index":352,"title":{},"body":{"components/MapPage.html":{}}}],["l.marker([position.position.coords.latitude",{"_index":396,"title":{},"body":{"components/MapPage.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addto(this.map",{"_index":357,"title":{},"body":{"components/MapPage.html":{}}}],["latitude",{"_index":708,"title":{},"body":{"classes/UserPosition.html":{}}}],["leaflet",{"_index":325,"title":{},"body":{"components/MapPage.html":{},"dependencies.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"index.html":{}}}],["leitold",{"_index":583,"title":{},"body":{"components/OverviewPage.html":{}}}],["literal",{"_index":338,"title":{},"body":{"components/MapPage.html":{}}}],["load",{"_index":173,"title":{},"body":{"components/CashboxPage.html":{},"components/MapPage.html":{}}}],["loadchildren",{"_index":57,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["loading",{"_index":525,"title":{},"body":{"components/NotesPage.html":{}}}],["loadmap",{"_index":318,"title":{},"body":{"components/MapPage.html":{}}}],["loadnotes",{"_index":513,"title":{},"body":{"components/NotesPage.html":{}}}],["loadnotes(refreshevent",{"_index":523,"title":{},"body":{"components/NotesPage.html":{}}}],["local",{"_index":404,"title":{},"body":{"components/MapPage.html":{}}}],["localisation",{"_index":721,"title":{},"body":{"classes/UserPosition.html":{}}}],["localstorage.setitem(\"settings",{"_index":654,"title":{},"body":{"injectables/SettingsService.html":{}}}],["localstorage.setitem('cachednotes",{"_index":445,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["location",{"_index":332,"title":{},"body":{"components/MapPage.html":{}}}],["login",{"_index":607,"title":{},"body":{"components/SettingsPage.html":{}}}],["longitude",{"_index":706,"title":{},"body":{"classes/UserPosition.html":{}}}],["löschen",{"_index":487,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["managing",{"_index":447,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["map",{"_index":313,"title":{},"body":{"components/MapPage.html":{},"modules/TabsPageRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":214,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["map.page",{"_index":423,"title":{},"body":{"modules/MapPageModule.html":{}}}],["map.page.html",{"_index":315,"title":{},"body":{"components/MapPage.html":{}}}],["map.page.scss",{"_index":314,"title":{},"body":{"components/MapPage.html":{}}}],["map.service",{"_index":339,"title":{},"body":{"components/MapPage.html":{}}}],["map/map.module#mappagemodule",{"_index":670,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["map\\n${json.stringify(e",{"_index":370,"title":{},"body":{"components/MapPage.html":{}}}],["mappage",{"_index":213,"title":{"components/MapPage.html":{}},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{},"coverage.html":{},"index.html":{}}}],["mappagemodule",{"_index":419,"title":{"modules/MapPageModule.html":{}},"body":{"modules/MapPageModule.html":{},"index.html":{},"modules.html":{}}}],["mapservice",{"_index":321,"title":{},"body":{"components/MapPage.html":{},"classes/UserPosition.html":{}}}],["marker",{"_index":326,"title":{},"body":{"components/MapPage.html":{}}}],["markers",{"_index":316,"title":{},"body":{"components/MapPage.html":{}}}],["matching",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":363,"title":{},"body":{"components/MapPage.html":{},"components/NotesPage.html":{},"components/SettingsPage.html":{}}}],["metadata",{"_index":86,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["method",{"_index":124,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/NotesPage.html":{},"components/SettingsPage.html":{},"classes/Sum.html":{}}}],["methods",{"_index":97,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{}}}],["miscellaneous",{"_index":771,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":275,"title":{},"body":{"components/EditorComponent.html":{}}}],["modalcontroller",{"_index":107,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/NotesPage.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"index.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["money",{"_index":80,"title":{},"body":{"components/CashboxPage.html":{}}}],["name",{"_index":114,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["native/core",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["native/splash",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["native/status",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["navigator.geolocation.getcurrentposition((success",{"_index":603,"title":{},"body":{"injectables/PositionService.html":{}}}],["new",{"_index":119,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{},"coverage.html":{}}}],["newmessagebutton",{"_index":510,"title":{},"body":{"components/NotesPage.html":{}}}],["newnotes_button",{"_index":546,"title":{},"body":{"components/NotesPage.html":{}}}],["ngmodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["ngoninit",{"_index":103,"title":{},"body":{"components/CashboxPage.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["nicht",{"_index":468,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["note",{"_index":424,"title":{"classes/Note.html":{}},"body":{"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"coverage.html":{}}}],["note).topromise",{"_index":486,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["note.note",{"_index":544,"title":{},"body":{"components/NotesPage.html":{}}}],["note.offline",{"_index":466,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["note.timestamp",{"_index":460,"title":{},"body":{"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{}}}],["note.username",{"_index":542,"title":{},"body":{"components/NotesPage.html":{}}}],["notes",{"_index":439,"title":{},"body":{"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"modules/TabsPageRoutingModule.html":{}}}],["notes'},{'name",{"_index":216,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["notes.page",{"_index":559,"title":{},"body":{"modules/NotesPageModule.html":{}}}],["notes.page.html",{"_index":509,"title":{},"body":{"components/NotesPage.html":{}}}],["notes.page.scss",{"_index":508,"title":{},"body":{"components/NotesPage.html":{}}}],["notes.service",{"_index":534,"title":{},"body":{"components/NotesPage.html":{}}}],["notes/notes.module#notespagemodule",{"_index":672,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["notespage",{"_index":215,"title":{"components/NotesPage.html":{}},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{},"coverage.html":{},"index.html":{}}}],["notespagemodule",{"_index":555,"title":{"modules/NotesPageModule.html":{}},"body":{"modules/NotesPageModule.html":{},"index.html":{},"modules.html":{}}}],["notesservice",{"_index":435,"title":{"injectables/NotesService.html":{}},"body":{"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"coverage.html":{}}}],["notestoupload",{"_index":484,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["now",{"_index":472,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["null",{"_index":531,"title":{},"body":{"components/NotesPage.html":{},"classes/UserPosition.html":{}}}],["number",{"_index":256,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"classes/Sum.html":{}}}],["number:'.2",{"_index":202,"title":{},"body":{"components/CashboxPage.html":{}}}],["number:\\'.2",{"_index":210,"title":{},"body":{"components/CashboxPage.html":{}}}],["nur",{"_index":477,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["obj",{"_index":650,"title":{},"body":{"injectables/SettingsService.html":{}}}],["obj[\"defaultcurrency",{"_index":653,"title":{},"body":{"injectables/SettingsService.html":{}}}],["obj[\"username",{"_index":652,"title":{},"body":{"injectables/SettingsService.html":{}}}],["object.keys(this.markers",{"_index":410,"title":{},"body":{"components/MapPage.html":{}}}],["offline",{"_index":427,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["ok",{"_index":302,"title":{},"body":{"components/EditorComponent.html":{},"components/MapPage.html":{},"components/SettingsPage.html":{}}}],["one",{"_index":395,"title":{},"body":{"components/MapPage.html":{}}}],["oninit",{"_index":85,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["online",{"_index":469,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["onlinenotes",{"_index":471,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["openstreetmap",{"_index":329,"title":{},"body":{"components/MapPage.html":{}}}],["optional",{"_index":116,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{}}}],["order",{"_index":368,"title":{},"body":{"components/MapPage.html":{}}}],["others",{"_index":720,"title":{},"body":{"classes/UserPosition.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"index.html":{}}}],["overlay",{"_index":278,"title":{},"body":{"components/EditorComponent.html":{}}}],["overview",{"_index":575,"title":{"index.html":{}},"body":{"components/OverviewPage.html":{},"modules/TabsPageRoutingModule.html":{},"index.html":{}}}],["overview'},{'name",{"_index":218,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["overview.page",{"_index":592,"title":{},"body":{"modules/OverviewPageModule.html":{}}}],["overview.page.html",{"_index":577,"title":{},"body":{"components/OverviewPage.html":{}}}],["overview.page.scss",{"_index":576,"title":{},"body":{"components/OverviewPage.html":{}}}],["overview/overview.module#overviewpagemodule",{"_index":669,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["overviewpage",{"_index":217,"title":{"components/OverviewPage.html":{}},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"components/SettingsPage.html":{},"coverage.html":{},"index.html":{}}}],["overviewpagemodule",{"_index":588,"title":{"modules/OverviewPageModule.html":{}},"body":{"modules/OverviewPageModule.html":{},"index.html":{},"modules.html":{}}}],["package",{"_index":750,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":547,"title":{},"body":{"components/NotesPage.html":{}}}],["page",{"_index":341,"title":{},"body":{"components/MapPage.html":{},"components/OverviewPage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":157,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"classes/UserPosition.html":{}}}],["parse",{"_index":437,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{},"injectables/SettingsService.html":{}}}],["part",{"_index":406,"title":{},"body":{"components/MapPage.html":{}}}],["pass",{"_index":181,"title":{},"body":{"components/CashboxPage.html":{}}}],["path",{"_index":56,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["pathmatch",{"_index":675,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["payload",{"_index":408,"title":{},"body":{"components/MapPage.html":{}}}],["please",{"_index":364,"title":{},"body":{"components/MapPage.html":{}}}],["pln",{"_index":293,"title":{},"body":{"components/EditorComponent.html":{},"components/SettingsPage.html":{}}}],["pos",{"_index":348,"title":{},"body":{"components/MapPage.html":{}}}],["pos.coords.latitude",{"_index":354,"title":{},"body":{"components/MapPage.html":{}}}],["pos.coords.longitude",{"_index":355,"title":{},"body":{"components/MapPage.html":{}}}],["positiion",{"_index":599,"title":{},"body":{"injectables/PositionService.html":{}}}],["position",{"_index":343,"title":{},"body":{"components/MapPage.html":{},"injectables/PositionService.html":{},"classes/UserPosition.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["position.coords.latitude",{"_index":709,"title":{},"body":{"classes/UserPosition.html":{}}}],["position.coords.longitude",{"_index":707,"title":{},"body":{"classes/UserPosition.html":{}}}],["position.position.coords.latitude",{"_index":393,"title":{},"body":{"components/MapPage.html":{}}}],["position.position.coords.longitude",{"_index":394,"title":{},"body":{"components/MapPage.html":{}}}],["position.service",{"_index":683,"title":{},"body":{"classes/UserPosition.html":{}}}],["position.timestamp",{"_index":704,"title":{},"body":{"classes/UserPosition.html":{}}}],["position.username",{"_index":390,"title":{},"body":{"components/MapPage.html":{}}}],["positions",{"_index":387,"title":{},"body":{"components/MapPage.html":{},"classes/UserPosition.html":{}}}],["positionschanged",{"_index":685,"title":{},"body":{"classes/UserPosition.html":{}}}],["positionservice",{"_index":593,"title":{"injectables/PositionService.html":{}},"body":{"injectables/PositionService.html":{},"classes/UserPosition.html":{},"coverage.html":{}}}],["preloadallmodules",{"_index":49,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":62,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presented",{"_index":279,"title":{},"body":{"components/EditorComponent.html":{}}}],["presenting",{"_index":77,"title":{},"body":{"components/CashboxPage.html":{}}}],["private",{"_index":64,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["production",{"_index":374,"title":{},"body":{"components/MapPage.html":{}}}],["projekt",{"_index":580,"title":{},"body":{"components/OverviewPage.html":{}}}],["promise",{"_index":158,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["promise((resolve",{"_index":601,"title":{},"body":{"injectables/PositionService.html":{}}}],["properties",{"_index":94,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["provide",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":259,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"index.html":{}}}],["public",{"_index":634,"title":{},"body":{"injectables/SettingsService.html":{},"classes/UserPosition.html":{}}}],["received",{"_index":407,"title":{},"body":{"components/MapPage.html":{}}}],["receivedusernames",{"_index":402,"title":{},"body":{"components/MapPage.html":{}}}],["receivedusernames.indexof(currentusername",{"_index":412,"title":{},"body":{"components/MapPage.html":{}}}],["receivedusernames.push(position.username",{"_index":403,"title":{},"body":{"components/MapPage.html":{}}}],["red",{"_index":553,"title":{},"body":{"components/NotesPage.html":{}}}],["redirectto",{"_index":673,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["refreshevent",{"_index":133,"title":{},"body":{"components/CashboxPage.html":{},"components/NotesPage.html":{}}}],["refreshevent.target.complete",{"_index":175,"title":{},"body":{"components/CashboxPage.html":{},"components/NotesPage.html":{}}}],["reject",{"_index":602,"title":{},"body":{"injectables/PositionService.html":{}}}],["reject(error",{"_index":605,"title":{},"body":{"injectables/PositionService.html":{}}}],["reload",{"_index":190,"title":{},"body":{"components/CashboxPage.html":{}}}],["remove",{"_index":336,"title":{},"body":{"components/MapPage.html":{}}}],["require",{"_index":344,"title":{},"body":{"components/MapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require('leaflet/dist/images/marker",{"_index":380,"title":{},"body":{"components/MapPage.html":{}}}],["require.context",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"index.html":{}}}],["resolve(success",{"_index":604,"title":{},"body":{"injectables/PositionService.html":{}}}],["result",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":470,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["return",{"_index":66,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CashboxService.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["returns",{"_index":121,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{},"miscellaneous/functions.html":{}}}],["ria",{"_index":579,"title":{},"body":{"components/OverviewPage.html":{}}}],["right",{"_index":548,"title":{},"body":{"components/NotesPage.html":{}}}],["root",{"_index":260,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["router",{"_index":52,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SettingsPage.html":{}}}],["routereusestrategy",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":50,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":231,"title":{},"body":{"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":61,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":51,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/CashboxPageModule.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":48,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rub",{"_index":294,"title":{},"body":{"components/EditorComponent.html":{},"components/SettingsPage.html":{}}}],["run",{"_index":334,"title":{},"body":{"components/MapPage.html":{},"components/NotesPage.html":{},"components/SettingsPage.html":{}}}],["rxjs",{"_index":682,"title":{},"body":{"classes/UserPosition.html":{},"dependencies.html":{}}}],["save",{"_index":611,"title":{},"body":{"components/SettingsPage.html":{},"injectables/SettingsService.html":{}}}],["saveandclose",{"_index":272,"title":{},"body":{"components/EditorComponent.html":{}}}],["saving",{"_index":281,"title":{},"body":{"components/EditorComponent.html":{}}}],["screen",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["sec",{"_index":688,"title":{},"body":{"classes/UserPosition.html":{}}}],["see",{"_index":369,"title":{},"body":{"components/MapPage.html":{}}}],["selector",{"_index":87,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["send",{"_index":545,"title":{},"body":{"components/NotesPage.html":{}}}],["senden",{"_index":483,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["sending",{"_index":522,"title":{},"body":{"components/NotesPage.html":{}}}],["sendmessage",{"_index":514,"title":{},"body":{"components/NotesPage.html":{}}}],["server",{"_index":457,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["servernotes",{"_index":458,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["servernotes.concat(this.cachednotes",{"_index":475,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["services",{"_index":367,"title":{},"body":{"components/MapPage.html":{}}}],["set",{"_index":330,"title":{},"body":{"components/MapPage.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"classes/UserPosition.html":{}}}],["setcachednotes(notes",{"_index":572,"title":{},"body":{"injectables/NotesService.html":{}}}],["setinterval(this.uploadmypositionandfetchotherspositions.bind(this",{"_index":693,"title":{},"body":{"classes/UserPosition.html":{}}}],["setmarkersonmap",{"_index":319,"title":{},"body":{"components/MapPage.html":{}}}],["settimeout",{"_index":541,"title":{},"body":{"components/NotesPage.html":{}}}],["settings",{"_index":59,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{}}}],["settings.page",{"_index":632,"title":{},"body":{"modules/SettingsPageModule.html":{}}}],["settings.page.html",{"_index":609,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":608,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.service",{"_index":54,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["settings/settings.module#settingspagemodule",{"_index":60,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["settingspage",{"_index":219,"title":{"components/SettingsPage.html":{}},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"coverage.html":{},"index.html":{}}}],["settingspagemodule",{"_index":628,"title":{"modules/SettingsPageModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"index.html":{},"modules.html":{}}}],["settingsservice",{"_index":53,"title":{"injectables/SettingsService.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{},"coverage.html":{}}}],["setup",{"_index":689,"title":{},"body":{"classes/UserPosition.html":{}}}],["shadow.png",{"_index":386,"title":{},"body":{"components/MapPage.html":{}}}],["shadowurl",{"_index":385,"title":{},"body":{"components/MapPage.html":{}}}],["shortly",{"_index":138,"title":{},"body":{"components/CashboxPage.html":{}}}],["show",{"_index":189,"title":{},"body":{"components/CashboxPage.html":{},"components/MapPage.html":{}}}],["showing",{"_index":342,"title":{},"body":{"components/MapPage.html":{},"miscellaneous/variables.html":{}}}],["showinvoiceeditor",{"_index":104,"title":{},"body":{"components/CashboxPage.html":{}}}],["showinvoiceeditor(invoicetoedit",{"_index":141,"title":{},"body":{"components/CashboxPage.html":{}}}],["sie",{"_index":489,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["sind",{"_index":467,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["soon",{"_index":193,"title":{},"body":{"components/CashboxPage.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CashboxPage.html":{},"modules/CashboxPageModule.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"modules/NotesPageModule.html":{},"injectables/NotesService.html":{},"components/OverviewPage.html":{},"modules/OverviewPageModule.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"classes/UserPosition.html":{}}}],["sowinska",{"_index":586,"title":{},"body":{"components/OverviewPage.html":{}}}],["spec\\.ts",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spended",{"_index":79,"title":{},"body":{"components/CashboxPage.html":{}}}],["spent",{"_index":200,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/.../map.page.ts",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test",{"_index":773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../test.ts",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":47,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/cashbox.service",{"_index":288,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/cashbox.service.ts",{"_index":234,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{},"coverage.html":{}}}],["src/app/cashbox.service.ts:12",{"_index":310,"title":{},"body":{"classes/Invoice.html":{}}}],["src/app/cashbox.service.ts:16",{"_index":311,"title":{},"body":{"classes/Invoice.html":{}}}],["src/app/cashbox.service.ts:20",{"_index":307,"title":{},"body":{"classes/Invoice.html":{}}}],["src/app/cashbox.service.ts:24",{"_index":308,"title":{},"body":{"classes/Invoice.html":{}}}],["src/app/cashbox.service.ts:28",{"_index":309,"title":{},"body":{"classes/Invoice.html":{}}}],["src/app/cashbox.service.ts:38",{"_index":656,"title":{},"body":{"classes/Sum.html":{}}}],["src/app/cashbox.service.ts:42",{"_index":655,"title":{},"body":{"classes/Sum.html":{}}}],["src/app/cashbox.service.ts:48",{"_index":238,"title":{},"body":{"injectables/CashboxService.html":{}}}],["src/app/cashbox.service.ts:63",{"_index":242,"title":{},"body":{"injectables/CashboxService.html":{}}}],["src/app/cashbox.service.ts:72",{"_index":252,"title":{},"body":{"injectables/CashboxService.html":{}}}],["src/app/cashbox.service.ts:80",{"_index":244,"title":{},"body":{"injectables/CashboxService.html":{}}}],["src/app/cashbox.service.ts:90",{"_index":247,"title":{},"body":{"injectables/CashboxService.html":{}}}],["src/app/cashbox.service.ts:99",{"_index":245,"title":{},"body":{"injectables/CashboxService.html":{}}}],["src/app/cashbox/cashbox.module.ts",{"_index":225,"title":{},"body":{"modules/CashboxPageModule.html":{}}}],["src/app/cashbox/cashbox.page.ts",{"_index":75,"title":{},"body":{"components/CashboxPage.html":{},"coverage.html":{}}}],["src/app/cashbox/cashbox.page.ts:103",{"_index":123,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/app/cashbox/cashbox.page.ts:124",{"_index":142,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/app/cashbox/cashbox.page.ts:20",{"_index":148,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/app/cashbox/cashbox.page.ts:24",{"_index":149,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/app/cashbox/cashbox.page.ts:29",{"_index":151,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/app/cashbox/cashbox.page.ts:31",{"_index":111,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/app/cashbox/cashbox.page.ts:53",{"_index":135,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/app/cashbox/cashbox.page.ts:63",{"_index":131,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/app/cashbox/cashbox.page.ts:84",{"_index":117,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/app/cashbox/cashbox.page.ts:93",{"_index":127,"title":{},"body":{"components/CashboxPage.html":{}}}],["src/app/cashbox/editor/editor.component.ts",{"_index":267,"title":{},"body":{"components/EditorComponent.html":{},"coverage.html":{}}}],["src/app/cashbox/editor/editor.component.ts:19",{"_index":287,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/cashbox/editor/editor.component.ts:24",{"_index":285,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/cashbox/editor/editor.component.ts:29",{"_index":274,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/cashbox/editor/editor.component.ts:50",{"_index":276,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/cashbox/editor/editor.component.ts:58",{"_index":280,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/currency.service",{"_index":289,"title":{},"body":{"components/EditorComponent.html":{}}}],["src/app/map.service.ts",{"_index":678,"title":{},"body":{"classes/UserPosition.html":{},"coverage.html":{}}}],["src/app/map.service.ts:14",{"_index":680,"title":{},"body":{"classes/UserPosition.html":{}}}],["src/app/map.service.ts:18",{"_index":679,"title":{},"body":{"classes/UserPosition.html":{}}}],["src/app/map/map.module.ts",{"_index":422,"title":{},"body":{"modules/MapPageModule.html":{}}}],["src/app/map/map.page.ts",{"_index":312,"title":{},"body":{"components/MapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/map/map.page.ts:101",{"_index":335,"title":{},"body":{"components/MapPage.html":{}}}],["src/app/map/map.page.ts:21",{"_index":337,"title":{},"body":{"components/MapPage.html":{}}}],["src/app/map/map.page.ts:26",{"_index":322,"title":{},"body":{"components/MapPage.html":{}}}],["src/app/map/map.page.ts:42",{"_index":333,"title":{},"body":{"components/MapPage.html":{}}}],["src/app/map/map.page.ts:53",{"_index":328,"title":{},"body":{"components/MapPage.html":{}}}],["src/app/map/map.page.ts:87",{"_index":323,"title":{},"body":{"components/MapPage.html":{}}}],["src/app/notes.service.ts",{"_index":425,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{},"coverage.html":{}}}],["src/app/notes.service.ts:12",{"_index":429,"title":{},"body":{"classes/Note.html":{}}}],["src/app/notes.service.ts:122",{"_index":565,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/app/notes.service.ts:143",{"_index":567,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/app/notes.service.ts:154",{"_index":568,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/app/notes.service.ts:16",{"_index":433,"title":{},"body":{"classes/Note.html":{}}}],["src/app/notes.service.ts:20",{"_index":434,"title":{},"body":{"classes/Note.html":{}}}],["src/app/notes.service.ts:24",{"_index":430,"title":{},"body":{"classes/Note.html":{}}}],["src/app/notes.service.ts:28",{"_index":431,"title":{},"body":{"classes/Note.html":{}}}],["src/app/notes.service.ts:43",{"_index":571,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/app/notes.service.ts:56",{"_index":573,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/app/notes.service.ts:58",{"_index":564,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/app/notes.service.ts:74",{"_index":566,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/app/notes.service.ts:98",{"_index":569,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/app/notes/notes.module.ts",{"_index":558,"title":{},"body":{"modules/NotesPageModule.html":{}}}],["src/app/notes/notes.page.ts",{"_index":506,"title":{},"body":{"components/NotesPage.html":{},"coverage.html":{}}}],["src/app/notes/notes.page.ts:14",{"_index":516,"title":{},"body":{"components/NotesPage.html":{}}}],["src/app/notes/notes.page.ts:28",{"_index":532,"title":{},"body":{"components/NotesPage.html":{}}}],["src/app/notes/notes.page.ts:33",{"_index":529,"title":{},"body":{"components/NotesPage.html":{}}}],["src/app/notes/notes.page.ts:38",{"_index":530,"title":{},"body":{"components/NotesPage.html":{}}}],["src/app/notes/notes.page.ts:44",{"_index":526,"title":{},"body":{"components/NotesPage.html":{}}}],["src/app/notes/notes.page.ts:53",{"_index":524,"title":{},"body":{"components/NotesPage.html":{}}}],["src/app/notes/notes.page.ts:66",{"_index":518,"title":{},"body":{"components/NotesPage.html":{}}}],["src/app/notes/notes.page.ts:73",{"_index":528,"title":{},"body":{"components/NotesPage.html":{}}}],["src/app/notes/notes.page.ts:84",{"_index":521,"title":{},"body":{"components/NotesPage.html":{}}}],["src/app/overview/overview.module.ts",{"_index":591,"title":{},"body":{"modules/OverviewPageModule.html":{}}}],["src/app/overview/overview.page.ts",{"_index":574,"title":{},"body":{"components/OverviewPage.html":{},"coverage.html":{}}}],["src/app/position.service.ts",{"_index":594,"title":{},"body":{"injectables/PositionService.html":{},"coverage.html":{}}}],["src/app/position.service.ts:14",{"_index":596,"title":{},"body":{"injectables/PositionService.html":{}}}],["src/app/settings.service.ts",{"_index":633,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/settings.service.ts:11",{"_index":644,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings.service.ts:16",{"_index":643,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings.service.ts:22",{"_index":646,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings.service.ts:24",{"_index":636,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings.service.ts:44",{"_index":637,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/settings/settings.module.ts",{"_index":631,"title":{},"body":{"modules/SettingsPageModule.html":{}}}],["src/app/settings/settings.page.ts",{"_index":606,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{}}}],["src/app/settings/settings.page.ts:20",{"_index":618,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/settings.page.ts:25",{"_index":617,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/settings.page.ts:30",{"_index":613,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/settings.page.ts:49",{"_index":614,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/settings/settings.page.ts:57",{"_index":615,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/tabs/tabs.module.ts",{"_index":663,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["src/app/tabs/tabs.router.module.ts",{"_index":666,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["src/app/test",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/test.ts",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start.bat",{"_index":581,"title":{},"body":{"components/OverviewPage.html":{}}}],["statements",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":696,"title":{},"body":{"classes/UserPosition.html":{}}}],["storage",{"_index":638,"title":{},"body":{"injectables/SettingsService.html":{}}}],["string",{"_index":156,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{}}}],["stringify",{"_index":442,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["styles",{"_index":72,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["styleurls",{"_index":89,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["subheader",{"_index":172,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{}}}],["subject",{"_index":681,"title":{},"body":{"classes/UserPosition.html":{}}}],["sum",{"_index":81,"title":{"classes/Sum.html":{}},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{},"coverage.html":{}}}],["sum(currency",{"_index":246,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["sum.sum",{"_index":201,"title":{},"body":{"components/CashboxPage.html":{}}}],["sumcurrency",{"_index":96,"title":{},"body":{"components/CashboxPage.html":{}}}],["summing",{"_index":132,"title":{},"body":{"components/CashboxPage.html":{}}}],["support",{"_index":779,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":780,"title":{},"body":{"modules.html":{}}}],["table",{"_index":191,"title":{},"body":{"components/CashboxPage.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":667,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["tabs.page",{"_index":665,"title":{},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs.router.module",{"_index":664,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["tabs/overview",{"_index":674,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["tabs/tabs.module#tabspagemodule",{"_index":58,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabspage",{"_index":661,"title":{},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"index.html":{}}}],["tabspagemodule",{"_index":657,"title":{"modules/TabsPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"index.html":{},"modules.html":{}}}],["tabspageroutingmodule",{"_index":662,"title":{"modules/TabsPageRoutingModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["template",{"_index":71,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["templateurl",{"_index":91,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["test",{"_index":774,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tests",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thb",{"_index":295,"title":{},"body":{"components/EditorComponent.html":{},"components/SettingsPage.html":{}}}],["this.alertcontroller.create",{"_index":169,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/SettingsPage.html":{}}}],["this.applyleafletproductionbuildhack",{"_index":350,"title":{},"body":{"components/MapPage.html":{}}}],["this.cachednotes",{"_index":473,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["this.cachednotes.filter(note",{"_index":474,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["this.cashboxservice.add(this.invoice",{"_index":299,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.cashboxservice.all",{"_index":163,"title":{},"body":{"components/CashboxPage.html":{}}}],["this.cashboxservice.delete(invoice",{"_index":178,"title":{},"body":{"components/CashboxPage.html":{}}}],["this.cashboxservice.sum(this.sumcurrency",{"_index":165,"title":{},"body":{"components/CashboxPage.html":{}}}],["this.cashboxservice.update(this.invoice",{"_index":298,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.currencyservice.availablecurrencies",{"_index":147,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/SettingsPage.html":{}}}],["this.defaultcurrency",{"_index":620,"title":{},"body":{"components/SettingsPage.html":{},"injectables/SettingsService.html":{}}}],["this.defaultcurrency.length",{"_index":649,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.fetchpositions",{"_index":715,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.getcurrentposition",{"_index":712,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.getinvoicesandsum",{"_index":160,"title":{},"body":{"components/CashboxPage.html":{}}}],["this.httpclient.delete('/api/note",{"_index":501,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["this.httpclient.delete(`/api/cashbox/${invoice.id}`).topromise",{"_index":266,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["this.httpclient.get(\"/api/cashbox\").topromise",{"_index":264,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["this.httpclient.get(\"/api/positions\").topromise",{"_index":723,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.httpclient.get('/api/notes').topromise",{"_index":459,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["this.httpclient.get(`/api/cashbox/sum/${currency}`).topromise",{"_index":265,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["this.httpclient.post(\"/api/cashbox",{"_index":261,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["this.httpclient.post(\"/api/position",{"_index":703,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.httpclient.post('/api/note",{"_index":504,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["this.httpclient.post('/api/notes",{"_index":485,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["this.httpclient.put(`/api/cashbox/${invoice.id",{"_index":263,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["this.invoices",{"_index":162,"title":{},"body":{"components/CashboxPage.html":{}}}],["this.issetup",{"_index":695,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.loadmap",{"_index":347,"title":{},"body":{"components/MapPage.html":{}}}],["this.loadnotes",{"_index":527,"title":{},"body":{"components/NotesPage.html":{}}}],["this.map",{"_index":351,"title":{},"body":{"components/MapPage.html":{}}}],["this.map.removelayer(this.markers[currentusername",{"_index":414,"title":{},"body":{"components/MapPage.html":{}}}],["this.mapservice.getcurrentposition",{"_index":349,"title":{},"body":{"components/MapPage.html":{}}}],["this.mapservice.positions",{"_index":388,"title":{},"body":{"components/MapPage.html":{}}}],["this.mapservice.positionschanged.subscribe(async",{"_index":359,"title":{},"body":{"components/MapPage.html":{}}}],["this.mapservice.setup",{"_index":346,"title":{},"body":{"components/MapPage.html":{}}}],["this.markers",{"_index":391,"title":{},"body":{"components/MapPage.html":{}}}],["this.markers[currentusername",{"_index":415,"title":{},"body":{"components/MapPage.html":{}}}],["this.markers[position.username",{"_index":399,"title":{},"body":{"components/MapPage.html":{}}}],["this.markers[position.username].setlatlng",{"_index":392,"title":{},"body":{"components/MapPage.html":{}}}],["this.message",{"_index":539,"title":{},"body":{"components/NotesPage.html":{}}}],["this.modalcontroller.create",{"_index":188,"title":{},"body":{"components/CashboxPage.html":{}}}],["this.modalcontroller.dismiss",{"_index":296,"title":{},"body":{"components/EditorComponent.html":{}}}],["this.newmessagebutton",{"_index":537,"title":{},"body":{"components/NotesPage.html":{}}}],["this.notes",{"_index":535,"title":{},"body":{"components/NotesPage.html":{}}}],["this.notesservice.addnote(this.message",{"_index":538,"title":{},"body":{"components/NotesPage.html":{}}}],["this.notesservice.allnotes",{"_index":536,"title":{},"body":{"components/NotesPage.html":{}}}],["this.notesservice.deletenote(id",{"_index":540,"title":{},"body":{"components/NotesPage.html":{}}}],["this.positions",{"_index":714,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.positionschanged.next",{"_index":716,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.positionservice.getcurrentposition",{"_index":701,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.router.navigate([\"settings",{"_index":67,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["this.router.navigate([\"tabs",{"_index":627,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.setmarkersonmap",{"_index":358,"title":{},"body":{"components/MapPage.html":{}}}],["this.settingsservice.defaultcurrency",{"_index":150,"title":{},"body":{"components/CashboxPage.html":{},"components/SettingsPage.html":{}}}],["this.settingsservice.save",{"_index":621,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.settingsservice.username",{"_index":496,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"classes/UserPosition.html":{}}}],["this.showinvoiceeditor",{"_index":176,"title":{},"body":{"components/CashboxPage.html":{}}}],["this.showinvoiceeditor(invoice",{"_index":177,"title":{},"body":{"components/CashboxPage.html":{}}}],["this.sum",{"_index":164,"title":{},"body":{"components/CashboxPage.html":{}}}],["this.timer",{"_index":692,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.updateposition(position",{"_index":713,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.uploadcachednotes",{"_index":449,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["this.uploadmypositionandfetchotherspositions",{"_index":691,"title":{},"body":{"classes/UserPosition.html":{}}}],["this.username",{"_index":619,"title":{},"body":{"components/SettingsPage.html":{},"injectables/SettingsService.html":{}}}],["this.username.length",{"_index":647,"title":{},"body":{"injectables/SettingsService.html":{}}}],["time",{"_index":465,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{},"classes/UserPosition.html":{}}}],["timer",{"_index":687,"title":{},"body":{"classes/UserPosition.html":{}}}],["timestamp",{"_index":428,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{},"classes/UserPosition.html":{}}}],["title",{"_index":257,"title":{},"body":{"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Sum.html":{}}}],["tomberger",{"_index":584,"title":{},"body":{"components/OverviewPage.html":{}}}],["topromise",{"_index":505,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{},"classes/UserPosition.html":{}}}],["tree",{"_index":74,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["true",{"_index":184,"title":{},"body":{"components/CashboxPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"classes/UserPosition.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":161,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"injectables/SettingsService.html":{},"classes/UserPosition.html":{}}}],["tslib",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":115,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/Sum.html":{},"classes/UserPosition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["und",{"_index":453,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["update",{"_index":235,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Sum.html":{}}}],["update(invoice",{"_index":251,"title":{},"body":{"injectables/CashboxService.html":{},"classes/Invoice.html":{},"classes/Sum.html":{}}}],["updatenote",{"_index":561,"title":{},"body":{"injectables/NotesService.html":{}}}],["updatenote(id",{"_index":503,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["updateposition(position",{"_index":702,"title":{},"body":{"classes/UserPosition.html":{}}}],["updating",{"_index":303,"title":{},"body":{"components/EditorComponent.html":{},"classes/Note.html":{},"injectables/NotesService.html":{}}}],["upload",{"_index":451,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{},"classes/UserPosition.html":{}}}],["uploadcachednotes",{"_index":481,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["uploading",{"_index":718,"title":{},"body":{"classes/UserPosition.html":{}}}],["uploadmypositionandfetchotherspositions",{"_index":711,"title":{},"body":{"classes/UserPosition.html":{}}}],["usd",{"_index":291,"title":{},"body":{"components/EditorComponent.html":{},"components/SettingsPage.html":{}}}],["use",{"_index":324,"title":{},"body":{"components/MapPage.html":{}}}],["useclass",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":331,"title":{},"body":{"components/MapPage.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"classes/UserPosition.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":345,"title":{},"body":{"components/MapPage.html":{},"classes/Note.html":{},"injectables/NotesService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"classes/UserPosition.html":{}}}],["usernames",{"_index":401,"title":{},"body":{"components/MapPage.html":{}}}],["userposition",{"_index":677,"title":{"classes/UserPosition.html":{}},"body":{"classes/UserPosition.html":{},"coverage.html":{}}}],["users",{"_index":405,"title":{},"body":{"components/MapPage.html":{},"classes/UserPosition.html":{}}}],["valid",{"_index":624,"title":{},"body":{"components/SettingsPage.html":{}}}],["value",{"_index":146,"title":{},"body":{"components/CashboxPage.html":{},"injectables/CashboxService.html":{},"components/EditorComponent.html":{},"classes/Invoice.html":{},"components/MapPage.html":{},"classes/Note.html":{},"components/NotesPage.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":208,"title":{},"body":{"components/CashboxPage.html":{},"components/EditorComponent.html":{},"components/MapPage.html":{},"components/NotesPage.html":{},"components/OverviewPage.html":{},"components/SettingsPage.html":{}}}],["variable",{"_index":284,"title":{},"body":{"components/EditorComponent.html":{},"components/NotesPage.html":{},"injectables/SettingsService.html":{},"classes/UserPosition.html":{},"coverage.html":{}}}],["variables",{"_index":783,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":192,"title":{},"body":{"components/CashboxPage.html":{}}}],["void",{"_index":327,"title":{},"body":{"components/MapPage.html":{},"components/NotesPage.html":{},"injectables/NotesService.html":{},"injectables/PositionService.html":{},"components/SettingsPage.html":{},"injectables/SettingsService.html":{}}}],["vom",{"_index":456,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["wagner",{"_index":587,"title":{},"body":{"components/OverviewPage.html":{}}}],["waiting",{"_index":140,"title":{},"body":{"components/CashboxPage.html":{}}}],["want",{"_index":182,"title":{},"body":{"components/CashboxPage.html":{}}}],["wechtitsch",{"_index":585,"title":{},"body":{"components/OverviewPage.html":{}}}],["width",{"_index":416,"title":{},"body":{"components/MapPage.html":{}}}],["window",{"_index":283,"title":{},"body":{"components/EditorComponent.html":{}}}],["wurde",{"_index":492,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["yes",{"_index":134,"title":{},"body":{"components/CashboxPage.html":{},"components/NotesPage.html":{}}}],["zone.js",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/CashboxPageModule.html":{},"components/MapPage.html":{},"modules/MapPageModule.html":{},"modules/NotesPageModule.html":{},"modules/OverviewPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/TabsPageModule.html":{},"index.html":{}}}],["zuerst",{"_index":450,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["zum",{"_index":482,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["zurückgeben",{"_index":479,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}],["zusammenfügen",{"_index":476,"title":{},"body":{"classes/Note.html":{},"injectables/NotesService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [BrowserModule, HttpClientModule, IonicModule.forRoot(), AppRoutingModule],\n  providers: [\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes, Router } from '@angular/router';\nimport { SettingsService } from './settings.service';\n\n\nconst routes: Routes = [\n  { path: '', loadChildren: './tabs/tabs.module#TabsPageModule' },\n  { path: 'settings', loadChildren: './settings/settings.module#SettingsPageModule' }\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n  constructor(\n    private router: Router,\n    private settingsService: SettingsService,\n  ) {\n    if(this.settingsService.areSettingsValid)\n      return;\n\n    this.router.navigate([\"settings\"]);\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CashboxPage.html":{"url":"components/CashboxPage.html","title":"component - CashboxPage","body":"\n                   \n\n\n\n\n\n  Components\n  CashboxPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cashbox/cashbox.page.ts\n\n\n    \n        Description\n    \n    \n        Component for presenting invoices, spended money and sum in different currencies\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cashbox\n            \n\n            \n                styleUrls\n                ./cashbox.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./cashbox.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableCurrencies\n                            \n                            \n                                invoices\n                            \n                            \n                                sum\n                            \n                            \n                                sumCurrency\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addInvoice\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getInvoicesAndSum\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                showInvoiceEditor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cashboxService: CashboxService, modalController: ModalController, currencyService: CurrencyService, alertController: AlertController, settingsService: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/cashbox/cashbox.page.ts:31\n                            \n                        \n\n                \n                    \n                            declare constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cashboxService\n                                                  \n                                                        \n                                                                        CashboxService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currencyService\n                                                  \n                                                        \n                                                                    CurrencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addInvoice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addInvoice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox/cashbox.page.ts:84\n                \n            \n\n\n            \n                \n                    add a new invoice\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(invoice: Invoice)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox/cashbox.page.ts:103\n                \n            \n\n\n            \n                \n                    method for deleting an invoice\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    invoice\n                                    \n                                                Invoice\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(invoice: Invoice)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox/cashbox.page.ts:93\n                \n            \n\n\n            \n                \n                    method fo editing an invoice\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    invoice\n                                    \n                                                Invoice\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getInvoicesAndSum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInvoicesAndSum(refreshEvent?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox/cashbox.page.ts:63\n                \n            \n\n\n            \n                \n                    method for summing of all invoices\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshEvent\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox/cashbox.page.ts:53\n                \n            \n\n\n            \n                \n                    method that Angular calls shortly after creating the component waiting on getInvoicesAndSum()\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            showInvoiceEditor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showInvoiceEditor(invoiceToEdit?: Invoice)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox/cashbox.page.ts:124\n                \n            \n\n\n            \n                \n                    method for invoice editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    invoiceToEdit\n                                    \n                                                Invoice\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableCurrencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.currencyService.availableCurrencies\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox/cashbox.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Invoice[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox/cashbox.page.ts:20\n                            \n                        \n\n                \n                    \n                        declare Invoice\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Sum\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox/cashbox.page.ts:24\n                            \n                        \n\n                \n                    \n                        declare sum\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sumCurrency\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.settingsService.defaultCurrency\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox/cashbox.page.ts:29\n                            \n                        \n\n                \n                    \n                        declare sum for currencies\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CashboxService, Invoice, Sum } from '../cashbox.service';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { EditorComponent } from './editor/editor.component';\nimport { CurrencyService } from '../currency.service';\nimport { SettingsService } from '../settings.service';\n\n/**\n * Component for presenting invoices, spended money and sum in different currencies\n */\n@Component({\n    selector: 'app-cashbox',\n    templateUrl: './cashbox.page.html',\n    styleUrls: ['./cashbox.page.scss'],\n})\nexport class CashboxPage implements OnInit {\n    /**\n     * declare Invoice\n     */\n    invoices: Invoice[];\n    /**\n     * declare sum\n     */\n    sum: Sum;\n    /**\n     * declare sum for currencies\n     * @type {string}\n     */\n    sumCurrency = this.settingsService.defaultCurrency;\n\n    availableCurrencies = this.currencyService.availableCurrencies;\n\n    /**\n     * declare constructor\n     * @param {CashboxService} cashboxService\n     * @param {ModalController} modalController\n     * @param {CurrencyService} currencyService\n     * @param {AlertController} alertController\n     * @param {SettingsService} settingsService\n     */\n    constructor(\n        private cashboxService: CashboxService,\n        private modalController: ModalController,\n        private currencyService: CurrencyService,\n        private alertController: AlertController,\n        private settingsService: SettingsService,\n    ) { }\n\n    /**\n     * method that Angular calls shortly after creating the component waiting on getInvoicesAndSum()\n     * @returns {Promise}\n     */\n    async ngOnInit() {\n        await this.getInvoicesAndSum();\n    }\n\n    /**\n     * method for summing of all invoices\n     * @param refreshEvent\n     * @returns {Promise}\n     */\n\n    async getInvoicesAndSum(refreshEvent?) {\n        try {\n            this.invoices = await this.cashboxService.all();\n            this.sum = await this.cashboxService.sum(this.sumCurrency);\n        } catch (e) {\n            const alert = await this.alertController.create({\n                header: \"Error\",\n                subHeader: \"Could not load invoices\",\n            });\n\n            await alert.present();\n        }\n\n        if (refreshEvent)\n            refreshEvent.target.complete();\n    }\n\n    /**\n     * add a new invoice\n     * @returns {Promise}\n     */\n    async addInvoice() {\n        await this.showInvoiceEditor();\n    }\n\n    /**\n     * method fo editing an invoice\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n    async edit(invoice: Invoice) {\n        await this.showInvoiceEditor(invoice);\n    }\n\n    /**\n     * method for deleting an invoice\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n\n    async delete(invoice: Invoice) {\n        try {\n            await this.cashboxService.delete(invoice);\n            await this.getInvoicesAndSum();\n        }\n        catch (e) {\n            const alert = await this.alertController.create({\n                header: \"Error\",\n                subHeader: `Could not delete invoice '${invoice.title}'`,\n            });\n\n            await alert.present();\n        }\n    }\n\n    /**\n     * method for invoice editor\n     * @param {Invoice} invoiceToEdit\n     * @returns {Promise}\n     */\n\n    private async showInvoiceEditor(invoiceToEdit?: Invoice) {\n        let componentProps = {};\n\n        if (invoiceToEdit) {\n            /**\n             * pass the invoice to the editor if we want to edit it\n              */\n            componentProps = {\n                isEditing: true,\n                invoice: invoiceToEdit,\n            };\n        }\n        /**\n         * create Editor component\n         * @type {HTMLIonModalElement}\n         */\n        const ctrl = await this.modalController.create({\n            component: EditorComponent,\n            componentProps,\n        });\n\n        /**\n         * show editor and reload table view as soon as the editor is dismissed\n         */\n        await ctrl.present();\n        await ctrl.onWillDismiss();\n        await this.getInvoicesAndSum();\n    }\n}\n\n    \n\n    \n        \n  \n    Cashbox\n    \n      \n    \n  \n\n\n\n  \n    \n  \n\n  \n    \n      Invoices\n    \n    \n      \n        \n          {{ invoice.title }}\n          {{ invoice.description }}\n          {{ invoice.cost }} {{invoice.currency}}\n        \n      \n\n      \n          \n              \n          \n\n        \n            \n        \n\n      \n    \n\n  \n\n  \n    \n      Money Spent\n    \n    \n      {{ sum.sum | number:'.2-2' }}\n      \n        {{ item.value }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./cashbox.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Cashbox                                    Invoices                                {{ invoice.title }}          {{ invoice.description }}          {{ invoice.cost }} {{invoice.currency}}                                                                                                          Money Spent              {{ sum.sum | number:\\'.2-2\\' }}              {{ item.value }}                    '\n    var COMPONENTS = [{'name': 'CashboxPage', 'selector': 'app-cashbox'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'MapPage', 'selector': 'app-map'},{'name': 'NotesPage', 'selector': 'app-notes'},{'name': 'OverviewPage', 'selector': 'app-overview'},{'name': 'SettingsPage', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CashboxPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CashboxPageModule.html":{"url":"modules/CashboxPageModule.html","title":"module - CashboxPageModule","body":"\n                   \n\n\n\n\n    Modules\n    CashboxPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CashboxPageModule\n\n\n\ncluster_CashboxPageModule_declarations\n\n\n\n\nCashboxPage\n\nCashboxPage\n\n\n\nCashboxPageModule\n\nCashboxPageModule\n\nCashboxPageModule -->\n\nCashboxPage->CashboxPageModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nCashboxPageModule -->\n\nEditorComponent->CashboxPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/cashbox/cashbox.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CashboxPage\n                        \n                        \n                            EditorComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            EditorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CashboxPage } from './cashbox.page';\nimport { EditorComponent } from './editor/editor.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CashboxPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CashboxPage, EditorComponent],\n  entryComponents: [EditorComponent]\n})\nexport class CashboxPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CashboxService.html":{"url":"injectables/CashboxService.html","title":"injectable - CashboxService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CashboxService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/cashbox.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add\n                            \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                sum\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/cashbox.service.ts:48\n                            \n                        \n\n                \n                    \n                            define cnstructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(invoice: Invoice)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox.service.ts:63\n                \n            \n\n\n            \n                \n                    ad new invoice\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    invoice\n                                    \n                                                Invoice\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            all\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    all()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox.service.ts:80\n                \n            \n\n\n            \n                \n                    get info. invoice\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(invoice: Invoice)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox.service.ts:99\n                \n            \n\n\n            \n                \n                    method for deleting an invoice\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    invoice\n                                    \n                                                Invoice\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sum(currency: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox.service.ts:90\n                \n            \n\n\n            \n                \n                    sum the invoces\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    currency\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"EUR\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(invoice: Invoice)\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox.service.ts:72\n                \n            \n\n\n            \n                \n                    let update the invoce\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    invoice\n                                    \n                                                Invoice\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * export Invoice data\n */\nexport class Invoice {\n    /**\n     * declare id as a number\n     */\n  id?: number;\n    /**\n     * declare title as a string\n     */\n  title: string;\n    /**\n     * declare cost as a number\n     */\n  cost: number;\n    /**\n     * declare currency as a string (EUR as default)\n     */\n  currency: string = \"EUR\";\n    /**\n     * declare description as a string\n     */\n  description: string;\n}\n\n/**\n * declare data\n */\nexport class Sum {\n    /**\n     * declare sum as a number\n     */\n  sum: number;\n    /**\n     * declare currency as a string\n     */\n  currency: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CashboxService {\n\n    /**\n     * define cnstructor\n     * @param {HttpClient} httpClient\n     */\n  constructor(\n    private httpClient: HttpClient,\n  ) {}\n\n    /**\n     * ad new invoice\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n  async add(invoice: Invoice) {\n    return await this.httpClient.post(\"/api/cashbox\", invoice).toPromise();\n  }\n\n    /**\n     * let update the invoce\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n  async update(invoice: Invoice): Promise {\n    return await this.httpClient.put(`/api/cashbox/${invoice.id}`, invoice).toPromise();\n  }\n\n    /**\n     * get info. invoice\n     * @returns {Promise}\n     */\n  async all(): Promise {\n    return await this.httpClient.get(\"/api/cashbox\").toPromise();\n  }\n\n    /**\n     * sum the invoces\n     * @param {string} currency\n     * @returns {Promise}\n     */\n\n  async sum(currency = \"EUR\"): Promise {\n    return await this.httpClient.get(`/api/cashbox/sum/${currency}`).toPromise();\n  }\n\n    /**\n     * method for deleting an invoice\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n  async delete(invoice: Invoice): Promise {\n    return await this.httpClient.delete(`/api/cashbox/${invoice.id}`).toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorComponent.html":{"url":"components/EditorComponent.html","title":"component - EditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cashbox/editor/editor.component.ts\n\n\n    \n        Description\n    \n    \n        Component for adding a new invoice\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editor\n            \n\n            \n                styleUrls\n                ./editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableCurrencies\n                            \n                            \n                                invoice\n                            \n                            \n                                isEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                saveAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController, cashboxService: CashboxService, alertController: AlertController, currencyService: CurrencyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/cashbox/editor/editor.component.ts:29\n                            \n                        \n\n                \n                    \n                            define constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ncreate a Modal\n\n\n                                                        \n                                                \n                                                \n                                                        cashboxService\n                                                  \n                                                        \n                                                                        CashboxService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        currencyService\n                                                  \n                                                        \n                                                                    CurrencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox/editor/editor.component.ts:50\n                \n            \n\n\n            \n                \n                    Dismiss the modal overlay after it has been presented.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveAndClose\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAndClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/cashbox/editor/editor.component.ts:58\n                \n            \n\n\n            \n                \n                    method for saving data and closing alert window\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableCurrencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.currencyService.availableCurrencies\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox/editor/editor.component.ts:29\n                            \n                        \n\n                \n                    \n                        define variable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoice\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Invoice()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox/editor/editor.component.ts:24\n                            \n                        \n\n                \n                    \n                        define variable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEditing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox/editor/editor.component.ts:19\n                            \n                        \n\n                \n                    \n                        define variable\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { Invoice, CashboxService } from 'src/app/cashbox.service';\nimport { CurrencyService } from 'src/app/currency.service';\n\n/**\n * Component for adding a new invoice\n */\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss'],\n})\nexport class EditorComponent {\n    /**\n     * define variable\n     * @type {boolean}\n     */\n  isEditing = false;\n    /**\n     * define variable\n     * @type {Invoice}\n     */\n  invoice = new Invoice();\n    /**\n     * define variable\n     * @type {{EUR: string; USD: string; GBP: string; PLN: string; RUB: string; THB: string}}\n     */\n  availableCurrencies = this.currencyService.availableCurrencies\n\n    /**\n     * define constructor\n     * @param {ModalController} modalController - create a Modal\n     * @param {CashboxService} cashboxService\n     * @param {AlertController} alertController\n     * @param {CurrencyService} currencyService\n     */\n  constructor(\n    private modalController: ModalController,\n    private cashboxService: CashboxService,\n    private alertController: AlertController,\n    private currencyService: CurrencyService,\n  ) { }\n\n    /**\n     * Dismiss the modal overlay after it has been presented.\n     * @returns {Promise}\n     */\n\n  async close() {\n    await this.modalController.dismiss();\n  }\n\n    /**\n     * method for saving data and closing alert window\n     * @returns {Promise}\n     */\n  async saveAndClose() {\n    try {\n      if(this.isEditing)\n        await this.cashboxService.update(this.invoice);\n      else\n        await this.cashboxService.add(this.invoice);\n      await this.modalController.dismiss();\n    } catch(e) {\n      const alert = await this.alertController.create({\n        buttons: [\"OK\"],\n        header: \"Error\",\n        subHeader: \"Error while creating or updating the invoice\"\n      });\n\n      await alert.present();\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Invoice Editor\n    \n      \n    \n  \n\n\n\n  \n    Currency\n    \n      {{ item.value }}\n      \n    \n  \n\n  \n    Expense Title\n    \n  \n\n  \n    Expense Description\n    \n  \n\n  \n    Expense Amount\n    \n  \n\n\n    \n\n    \n                \n                    ./editor.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Invoice Editor                      Currency          {{ item.value }}                  Expense Title            Expense Description            Expense Amount      '\n    var COMPONENTS = [{'name': 'CashboxPage', 'selector': 'app-cashbox'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'MapPage', 'selector': 'app-map'},{'name': 'NotesPage', 'selector': 'app-notes'},{'name': 'OverviewPage', 'selector': 'app-overview'},{'name': 'SettingsPage', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Invoice.html":{"url":"classes/Invoice.html","title":"class - Invoice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Invoice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/cashbox.service.ts\n        \n\n            \n                Description\n            \n            \n                export Invoice data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cost\n                            \n                            \n                                currency\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox.service.ts:20\n                            \n                        \n\n                \n                    \n                        declare cost as a number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"EUR\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox.service.ts:24\n                            \n                        \n\n                \n                    \n                        declare currency as a string (EUR as default)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox.service.ts:28\n                            \n                        \n\n                \n                    \n                        declare description as a string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox.service.ts:12\n                            \n                        \n\n                \n                    \n                        declare id as a number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox.service.ts:16\n                            \n                        \n\n                \n                    \n                        declare title as a string\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * export Invoice data\n */\nexport class Invoice {\n    /**\n     * declare id as a number\n     */\n  id?: number;\n    /**\n     * declare title as a string\n     */\n  title: string;\n    /**\n     * declare cost as a number\n     */\n  cost: number;\n    /**\n     * declare currency as a string (EUR as default)\n     */\n  currency: string = \"EUR\";\n    /**\n     * declare description as a string\n     */\n  description: string;\n}\n\n/**\n * declare data\n */\nexport class Sum {\n    /**\n     * declare sum as a number\n     */\n  sum: number;\n    /**\n     * declare currency as a string\n     */\n  currency: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CashboxService {\n\n    /**\n     * define cnstructor\n     * @param {HttpClient} httpClient\n     */\n  constructor(\n    private httpClient: HttpClient,\n  ) {}\n\n    /**\n     * ad new invoice\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n  async add(invoice: Invoice) {\n    return await this.httpClient.post(\"/api/cashbox\", invoice).toPromise();\n  }\n\n    /**\n     * let update the invoce\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n  async update(invoice: Invoice): Promise {\n    return await this.httpClient.put(`/api/cashbox/${invoice.id}`, invoice).toPromise();\n  }\n\n    /**\n     * get info. invoice\n     * @returns {Promise}\n     */\n  async all(): Promise {\n    return await this.httpClient.get(\"/api/cashbox\").toPromise();\n  }\n\n    /**\n     * sum the invoces\n     * @param {string} currency\n     * @returns {Promise}\n     */\n\n  async sum(currency = \"EUR\"): Promise {\n    return await this.httpClient.get(`/api/cashbox/sum/${currency}`).toPromise();\n  }\n\n    /**\n     * method for deleting an invoice\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n  async delete(invoice: Invoice): Promise {\n    return await this.httpClient.delete(`/api/cashbox/${invoice.id}`).toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapPage.html":{"url":"components/MapPage.html","title":"component - MapPage","body":"\n                   \n\n\n\n\n\n  Components\n  MapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/map/map.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map\n            \n\n            \n                styleUrls\n                ./map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                map\n                            \n                            \n                                markers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyLeafletProductionBuildHack\n                            \n                            \n                                    Private\n                                    Async\n                                loadMap\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                setMarkersOnMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(mapService: MapService, alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/app/map/map.page.ts:26\n                            \n                        \n\n                \n                    \n                            declare parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                    MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyLeafletProductionBuildHack\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyLeafletProductionBuildHack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/map/map.page.ts:87\n                \n            \n\n\n            \n                \n                    use of leaflet to show map with marker\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            loadMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/map/map.page.ts:53\n                \n            \n\n\n            \n                \n                    Load Map from openstreetmap\nset user location\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/map/map.page.ts:42\n                \n            \n\n\n            \n                \n                    run methods\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setMarkersOnMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMarkersOnMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/map/map.page.ts:101\n                \n            \n\n\n            \n                \n                    markers settings (set / update / remove)\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/map/map.page.ts:21\n                            \n                        \n\n                \n                    \n                        declare map\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/map/map.page.ts:26\n                            \n                        \n\n                \n                    \n                        declare markers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MapService } from '../map.service';\nimport * as L from \"leaflet\";\nimport { AlertController } from '@ionic/angular';\n\n/**\n * Page for showing user position on a map\n */\n\ndeclare var require : any;\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.page.html',\n  styleUrls: ['./map.page.scss'],\n})\nexport class MapPage implements OnInit {\n    /**\n     * declare map\n     */\n  map: any;\n    /**\n     * declare markers\n     * @type {{}}\n     */\n  markers: { [username: string]: any } = {};\n\n    /**\n     * declare parameters\n     * @param {MapService} mapService\n     * @param {AlertController} alertController\n     */\n  constructor(\n    private mapService: MapService,\n    private alertController: AlertController,\n  ) { }\n\n    /**\n     * run methods\n     * @returns {Promise}\n     */\n  async ngOnInit() {\n    await this.mapService.setup();\n    await this.loadMap();\n  }\n\n    /**\n     * Load Map from openstreetmap\n     * set user location\n     * @returns {Promise}\n     */\n\n  private async loadMap() {\n    try {\n      const pos: Position = await this.mapService.getCurrentPosition();\n\n      this.applyLeafletProductionBuildHack();\n\n      this.map = L.map(\"map\", {\n        center: [pos.coords.latitude, pos.coords.longitude],\n        zoom: 13\n      });\n\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(this.map);\n      await this.setMarkersOnMap();\n\n      this.mapService.positionsChanged.subscribe(async () => {\n        await this.setMarkersOnMap();\n      });\n    }\n    catch (e) {\n      console.error(e);\n      const alarmCtrl = await this.alertController.create({\n        backdropDismiss: false,\n        message: `Please enable geolocation services in order to see the map\\n${JSON.stringify(e)}`,\n        header: \"Error while showing the map\",\n        buttons: [\"OK\"],\n      });\n\n      await alarmCtrl.present();\n    }\n  }\n\n    /**\n     * use of leaflet to show map with marker\n     */\n  private applyLeafletProductionBuildHack() {\n    // see https://stackoverflow.com/questions/56411497/leaflet-marker-not-found-production-env-angular-7\n    delete L.Icon.Default.prototype._getIconUrl;\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n      iconUrl: require('leaflet/dist/images/marker-icon.png'),\n      shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n    });\n  }\n\n    /**\n     * markers settings (set / update / remove)\n     * @returns {Promise}\n     */\n  private async setMarkersOnMap() {\n    if (!this.map)\n      return;\n\n    const positions = this.mapService.positions;\n\n    for (const position of positions) {\n\n      // We have already a marker, just update the marker position\n      if (position.username in this.markers) {\n        this.markers[position.username].setLatLng([\n          position.position.coords.latitude,\n          position.position.coords.longitude,\n        ]).update();\n      }\n      // We do not have a marker, create a new one\n      else {\n        const marker = L.marker([position.position.coords.latitude, position.position.coords.longitude], {\n          title: position.username\n        })\n          .addTo(this.map)\n          .bindPopup(`${position.username}`);\n\n        this.markers[position.username] = marker;\n      }\n    }\n\n      /**\n       * Collect all usernames of the position update\n        */\n    const receivedUsernames: string[] = [];\n    for (const position of positions) {\n      receivedUsernames.push(position.username);\n    }\n\n      /**\n       * Remove all local markers of users that were not part of the received payload\n        */\n    const currentUsernames = Object.keys(this.markers);\n    for (const currentUsername of currentUsernames) {\n      if (receivedUsernames.indexOf(currentUsername) === -1) {\n        this.map.removeLayer(this.markers[currentUsername]);\n        delete this.markers[currentUsername];\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Map\n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./map.page.scss\n                \n                #map {\n    width: 100%;\n    height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Map    '\n    var COMPONENTS = [{'name': 'CashboxPage', 'selector': 'app-cashbox'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'MapPage', 'selector': 'app-map'},{'name': 'NotesPage', 'selector': 'app-notes'},{'name': 'OverviewPage', 'selector': 'app-overview'},{'name': 'SettingsPage', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapPageModule.html":{"url":"modules/MapPageModule.html","title":"module - MapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MapPageModule\n\n\n\ncluster_MapPageModule_declarations\n\n\n\n\nMapPage\n\nMapPage\n\n\n\nMapPageModule\n\nMapPageModule\n\nMapPageModule -->\n\nMapPage->MapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/map/map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MapPage } from './map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MapPage]\n})\nexport class MapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Note.html":{"url":"classes/Note.html","title":"class - Note","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Note\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notes.service.ts\n        \n\n            \n                Description\n            \n            \n                export data for Note db\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                note\n                            \n                            \n                                offline\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notes.service.ts:12\n                            \n                        \n\n                \n                    \n                        define id as a number\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            note\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notes.service.ts:24\n                            \n                        \n\n                \n                    \n                        define note as a string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notes.service.ts:28\n                            \n                        \n\n                \n                    \n                        define offline as false\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notes.service.ts:16\n                            \n                        \n\n                \n                    \n                        define timestamp as a Date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notes.service.ts:20\n                            \n                        \n\n                \n                    \n                        define username as a string\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SettingsService } from './settings.service';\n\n/**\n * export data for Note db\n */\nexport class Note {\n    /**\n     * define id as a number\n     */\n  id ?: number;\n    /**\n     * define timestamp as a Date\n     */\n  timestamp ?: Date;\n    /**\n     * define username as a string\n     */\n  username: string;\n    /**\n     * define note as a string\n     */\n  note: string;\n    /**\n     * define offline as false\n     */\n  offline = false;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NotesService {\n\n  // private cachedNotes: Note[] = [];\n\n    /**\n     * parse cachedNotes as a array of notes\n     * @returns {Note[]}\n     */\n  private get cachedNotes(): Note[] {\n    try {\n      const notes = JSON.parse(localStorage.getItem('cachedNotes')) as Note[];\n      return Array.isArray(notes) ? notes : [];\n    } catch (e) {\n      return [];\n    }\n  }\n\n    /**\n     * stringify JSON notes\n     * @param {Note[]} notes\n     */\n  private set cachedNotes(notes: Note[]) {\n    localStorage.setItem('cachedNotes', JSON.stringify(notes));\n  }\n\n    /**\n     * create a constructor\n     * @param {SettingsService} settingsService\n     * @param {HttpClient} httpClient\n     */\n  constructor(\n    private settingsService: SettingsService,\n    private httpClient: HttpClient,\n  ) {}\n\n    /**\n     * managing notes\n     * @returns {Promise}\n     */\n  async allNotes(): Promise {\n    try {\n      await this.uploadCachedNotes(); // zuerst upload der offline-notes und dann download vom server\n      const serverNotes = await this.httpClient.get('/api/notes').toPromise();\n      for (const note of serverNotes) {\n        note.timestamp = new Date(note.timestamp as any * 1000); // convert to epoch time\n        note.offline = false; // notes vom server sind nicht offline\n      }\n      // delete all online notes from cachedNotes, because we retrieved all onlinenotes now\n      this.cachedNotes = this.cachedNotes.filter(note => {\n        return note.offline;\n      });\n      this.cachedNotes = serverNotes.concat(this.cachedNotes); // notes vom server + offline notes zusammenfügen\n      return this.cachedNotes;\n    } catch (e) {\n      return this.cachedNotes; // nur gecachte notes zurückgeben\n    }\n  }\n\n    /**\n     * upload notes in cache\n     * @returns {Promise}\n     */\n\n  async uploadCachedNotes() {\n    // nur offline notes zum server senden\n    const notesToUpload = this.cachedNotes.filter(note => {\n      return note.offline;\n    });\n    for (const note of notesToUpload) {\n      try {\n        // senden der note\n        await this.httpClient.post('/api/notes', note).toPromise();\n\n        // note vom cache löschen, da sie erfolgreich hochgeladen wurde\n        const cachedNotes = this.cachedNotes;\n        cachedNotes.splice(cachedNotes.indexOf(note), 1);\n        this.cachedNotes = cachedNotes;\n      } catch (e) {\n      }\n    }\n  }\n\n    /**\n     * adding user note to the array\n     * @param {string} note\n     * @returns {Promise}\n     */\n  async addNote(note: string): Promise {\n    const body: Note = {\n      username: this.settingsService.username,\n      offline: false,\n      note\n    };\n    try {\n      return await this.httpClient.post('/api/notes', body).toPromise();\n    } catch (e) {\n      body.offline = true;\n      const cachedNotes = this.cachedNotes;\n      cachedNotes.push(body);\n      this.cachedNotes = cachedNotes;\n    }\n  }\n\n    /**\n     * delete a note\n     * @param {number} id\n     * @returns {Promise}\n     */\n  async deleteNote(id: number): Promise {\n    return await this.httpClient.delete('/api/note/' + id).toPromise();\n  }\n\n    /**\n     * updating a note\n     * @param {number} id\n     * @param {string} note\n     * @returns {Promise}\n     */\n\n  async updateNote(id: number, note: string): Promise {\n    return await this.httpClient.post('/api/note/' + id, {\n      username: this.settingsService.username,\n      note\n    }).toPromise();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotesPage.html":{"url":"components/NotesPage.html","title":"component - NotesPage","body":"\n                   \n\n\n\n\n\n  Components\n  NotesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notes/notes.page.ts\n\n\n    \n        Description\n    \n    \n        Component for handling notes\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notes\n            \n\n            \n                styleUrls\n                ./notes.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./notes.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                newMessageButton\n                            \n                            \n                                notes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                    Async\n                                deleteMessage\n                            \n                            \n                                    Async\n                                loadNotes\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notesService: NotesService, modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/notes/notes.page.ts:14\n                            \n                        \n\n                \n                    \n                            generate parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notesService\n                                                  \n                                                        \n                                                                        NotesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNote\n                        \n                        \n                    \n                \n            \n            \n                \naddNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notes/notes.page.ts:66\n                \n            \n\n\n            \n                \n                    button for adding a new note\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteMessage(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/notes/notes.page.ts:84\n                \n            \n\n\n            \n                \n                    button for sending a note\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadNotes(refreshEvent?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/notes/notes.page.ts:53\n                \n            \n\n\n            \n                \n                    method for loading notes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshEvent\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notes/notes.page.ts:44\n                \n            \n\n\n            \n                \n                    run method this.loadNotes()\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notes/notes.page.ts:73\n                \n            \n\n\n            \n                \n                    button for sending a note\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notes/notes.page.ts:33\n                            \n                        \n\n                \n                    \n                        define variable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMessageButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notes/notes.page.ts:38\n                            \n                        \n\n                \n                    \n                        define variable\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notes/notes.page.ts:28\n                            \n                        \n\n                \n                    \n                        define variable\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ModalController, IonRefresher } from '@ionic/angular';\nimport { NotesService } from '../notes.service';\n\n/**\n * Component for handling notes\n */\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.page.html',\n  styleUrls: ['./notes.page.scss'],\n})\nexport class NotesPage implements OnInit {\n    /**\n     * generate parameters\n     * @param {NotesService} notesService\n     * @param {ModalController} modalController\n     */\n  constructor(\n    private notesService: NotesService,\n    private modalController: ModalController) { }\n\n    /**\n     * define variable\n     * @type {null}\n     */\n  notes: any = null;\n    /**\n     * define variable\n     * @type {string}\n     */\n  message: any = '';\n    /**\n     * define variable\n     * @type {boolean}\n     */\n  newMessageButton = false;\n\n    /**\n     * run method this.loadNotes()\n     * @returns {Promise}\n     */\n  async ngOnInit() {\n    await this.loadNotes();\n  }\n\n    /**\n     * method for loading notes\n     * @param refreshEvent\n     * @returns {Promise}\n     */\n  async loadNotes(refreshEvent?) {\n    try {\n      this.notes = await this.notesService.allNotes();\n    } catch (e) {}\n\n    if (refreshEvent) {\n      refreshEvent.target.complete();\n    }\n  }\n\n    /**\n     * button for adding a new note\n     */\n  addNote() {\n    this.newMessageButton = true;\n  }\n\n    /**\n     * button for sending a note\n     */\n  async sendMessage() {\n    try {\n      await this.notesService.addNote(this.message);\n      await this.loadNotes();\n      this.message = '';\n      this.newMessageButton = false;\n    } catch (e) {}\n  }\n    /**\n     * button for sending a note\n     */\n  async deleteMessage(id) {\n    try {\n    this.notesService.deleteNote(id);\n    setTimeout(() => {\n      this.loadNotes();\n    }, 1000);\n    } catch (e) {\n    }\n  }\n}\n\n    \n\n    \n        \n  \n      Notes\n      \n          \n      \n  \n\n\n\n  \n    \n  \n\n  \n\n    \n        {{ note.username }}, {{ note.timestamp | date:'medium' }}\n            \n                \n            \n        \n    \n\n    {{ note.note }}\n        \n    \n\n  \n\n\n\n\n  \n        \n          \n          Send\n        \n  \n\n\n    \n\n    \n                \n                    ./notes.page.scss\n                \n                #newNotes_button{\n  padding-right: 25px;\n}\n\n.isOffline{\n  padding-right: 5px;\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Notes                                              {{ note.username }}, {{ note.timestamp | date:\\'medium\\' }}                                                        {{ note.note }}                                            Send          '\n    var COMPONENTS = [{'name': 'CashboxPage', 'selector': 'app-cashbox'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'MapPage', 'selector': 'app-map'},{'name': 'NotesPage', 'selector': 'app-notes'},{'name': 'OverviewPage', 'selector': 'app-overview'},{'name': 'SettingsPage', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotesPageModule.html":{"url":"modules/NotesPageModule.html","title":"module - NotesPageModule","body":"\n                   \n\n\n\n\n    Modules\n    NotesPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotesPageModule\n\n\n\ncluster_NotesPageModule_declarations\n\n\n\n\nNotesPage\n\nNotesPage\n\n\n\nNotesPageModule\n\nNotesPageModule\n\nNotesPageModule -->\n\nNotesPage->NotesPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/notes/notes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NotesPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotesPage } from './notes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NotesPage]\n})\nexport class NotesPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotesService.html":{"url":"injectables/NotesService.html","title":"injectable - NotesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notes.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNote\n                            \n                            \n                                    Async\n                                allNotes\n                            \n                            \n                                    Async\n                                deleteNote\n                            \n                            \n                                    Async\n                                updateNote\n                            \n                            \n                                    Async\n                                uploadCachedNotes\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cachedNotes\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settingsService: SettingsService, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/notes.service.ts:58\n                            \n                        \n\n                \n                    \n                            create a constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNote(note: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/notes.service.ts:122\n                \n            \n\n\n            \n                \n                    adding user note to the array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            allNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    allNotes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notes.service.ts:74\n                \n            \n\n\n            \n                \n                    managing notes\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteNote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteNote(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/notes.service.ts:143\n                \n            \n\n\n            \n                \n                    delete a note\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateNote\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateNote(id: number, note: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/notes.service.ts:154\n                \n            \n\n\n            \n                \n                    updating a note\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadCachedNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadCachedNotes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notes.service.ts:98\n                \n            \n\n\n            \n                \n                    upload notes in cache\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cachedNotes\n                    \n                \n\n                \n                    \n                        getcachedNotes()\n                    \n                \n                            \n                                \n                                    Defined in src/app/notes.service.ts:43\n                                \n                            \n                    \n                        \n                                parse cachedNotes as a array of notes\n\n\n                                \n                                \n                                \n                                    Returns :         Note[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setcachedNotes(notes: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/notes.service.ts:56\n                                \n                            \n                    \n                        \n                                stringify JSON notes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            notes\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SettingsService } from './settings.service';\n\n/**\n * export data for Note db\n */\nexport class Note {\n    /**\n     * define id as a number\n     */\n  id ?: number;\n    /**\n     * define timestamp as a Date\n     */\n  timestamp ?: Date;\n    /**\n     * define username as a string\n     */\n  username: string;\n    /**\n     * define note as a string\n     */\n  note: string;\n    /**\n     * define offline as false\n     */\n  offline = false;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NotesService {\n\n  // private cachedNotes: Note[] = [];\n\n    /**\n     * parse cachedNotes as a array of notes\n     * @returns {Note[]}\n     */\n  private get cachedNotes(): Note[] {\n    try {\n      const notes = JSON.parse(localStorage.getItem('cachedNotes')) as Note[];\n      return Array.isArray(notes) ? notes : [];\n    } catch (e) {\n      return [];\n    }\n  }\n\n    /**\n     * stringify JSON notes\n     * @param {Note[]} notes\n     */\n  private set cachedNotes(notes: Note[]) {\n    localStorage.setItem('cachedNotes', JSON.stringify(notes));\n  }\n\n    /**\n     * create a constructor\n     * @param {SettingsService} settingsService\n     * @param {HttpClient} httpClient\n     */\n  constructor(\n    private settingsService: SettingsService,\n    private httpClient: HttpClient,\n  ) {}\n\n    /**\n     * managing notes\n     * @returns {Promise}\n     */\n  async allNotes(): Promise {\n    try {\n      await this.uploadCachedNotes(); // zuerst upload der offline-notes und dann download vom server\n      const serverNotes = await this.httpClient.get('/api/notes').toPromise();\n      for (const note of serverNotes) {\n        note.timestamp = new Date(note.timestamp as any * 1000); // convert to epoch time\n        note.offline = false; // notes vom server sind nicht offline\n      }\n      // delete all online notes from cachedNotes, because we retrieved all onlinenotes now\n      this.cachedNotes = this.cachedNotes.filter(note => {\n        return note.offline;\n      });\n      this.cachedNotes = serverNotes.concat(this.cachedNotes); // notes vom server + offline notes zusammenfügen\n      return this.cachedNotes;\n    } catch (e) {\n      return this.cachedNotes; // nur gecachte notes zurückgeben\n    }\n  }\n\n    /**\n     * upload notes in cache\n     * @returns {Promise}\n     */\n\n  async uploadCachedNotes() {\n    // nur offline notes zum server senden\n    const notesToUpload = this.cachedNotes.filter(note => {\n      return note.offline;\n    });\n    for (const note of notesToUpload) {\n      try {\n        // senden der note\n        await this.httpClient.post('/api/notes', note).toPromise();\n\n        // note vom cache löschen, da sie erfolgreich hochgeladen wurde\n        const cachedNotes = this.cachedNotes;\n        cachedNotes.splice(cachedNotes.indexOf(note), 1);\n        this.cachedNotes = cachedNotes;\n      } catch (e) {\n      }\n    }\n  }\n\n    /**\n     * adding user note to the array\n     * @param {string} note\n     * @returns {Promise}\n     */\n  async addNote(note: string): Promise {\n    const body: Note = {\n      username: this.settingsService.username,\n      offline: false,\n      note\n    };\n    try {\n      return await this.httpClient.post('/api/notes', body).toPromise();\n    } catch (e) {\n      body.offline = true;\n      const cachedNotes = this.cachedNotes;\n      cachedNotes.push(body);\n      this.cachedNotes = cachedNotes;\n    }\n  }\n\n    /**\n     * delete a note\n     * @param {number} id\n     * @returns {Promise}\n     */\n  async deleteNote(id: number): Promise {\n    return await this.httpClient.delete('/api/note/' + id).toPromise();\n  }\n\n    /**\n     * updating a note\n     * @param {number} id\n     * @param {string} note\n     * @returns {Promise}\n     */\n\n  async updateNote(id: number, note: string): Promise {\n    return await this.httpClient.post('/api/note/' + id, {\n      username: this.settingsService.username,\n      note\n    }).toPromise();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OverviewPage.html":{"url":"components/OverviewPage.html","title":"component - OverviewPage","body":"\n                   \n\n\n\n\n\n  Components\n  OverviewPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/overview/overview.page.ts\n\n\n    \n        Description\n    \n    \n        overview page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-overview\n            \n\n            \n                styleUrls\n                ./overview.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./overview.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * overview page\n */\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.page.html',\n  styleUrls: ['./overview.page.scss'],\n})\nexport class OverviewPage implements OnInit {\n    /**\n     * @ignore\n     */\n  constructor() { }\n    /**\n     * @ignore\n     */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Overview\n  \n\n\n\n\n  \n    \n      RIA Projekt \"start.bat\"\n      Gruppe: Leitold, Tomberger, Wechtitsch, Sowinska, Wagner\n    \n\n    \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./overview.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Overview              RIA Projekt \"start.bat\"      Gruppe: Leitold, Tomberger, Wechtitsch, Sowinska, Wagner              '\n    var COMPONENTS = [{'name': 'CashboxPage', 'selector': 'app-cashbox'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'MapPage', 'selector': 'app-map'},{'name': 'NotesPage', 'selector': 'app-notes'},{'name': 'OverviewPage', 'selector': 'app-overview'},{'name': 'SettingsPage', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OverviewPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OverviewPageModule.html":{"url":"modules/OverviewPageModule.html","title":"module - OverviewPageModule","body":"\n                   \n\n\n\n\n    Modules\n    OverviewPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OverviewPageModule\n\n\n\ncluster_OverviewPageModule_declarations\n\n\n\n\nOverviewPage\n\nOverviewPage\n\n\n\nOverviewPageModule\n\nOverviewPageModule\n\nOverviewPageModule -->\n\nOverviewPage->OverviewPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/overview/overview.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OverviewPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OverviewPage } from './overview.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OverviewPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OverviewPage]\n})\nexport class OverviewPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PositionService.html":{"url":"injectables/PositionService.html","title":"injectable - PositionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PositionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/position.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/position.service.ts:14\n                \n            \n\n\n            \n                \n                    get information about current user positiion\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * class for getting user positiion\n */\nexport class PositionService {\n    /**\n     * get information about current user positiion\n     * @returns {Promise}\n     */\n  getCurrentPosition(): Promise {\n    return new Promise((resolve: (value: Position) => void, reject) => {\n      navigator.geolocation.getCurrentPosition((success) => {\n        resolve(success);\n      }, error => {\n        reject(error);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.page.ts\n\n\n    \n        Description\n    \n    \n        Component for login\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableCurrencies\n                            \n                            \n                                defaultCurrency\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, settingsService: SettingsService, alertController: AlertController, currencyService: CurrencyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.page.ts:30\n                            \n                        \n\n                \n                    \n                            declare parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currencyService\n                                                  \n                                                        \n                                                                    CurrencyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.page.ts:49\n                \n            \n\n\n            \n                \n                    run method\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings/settings.page.ts:57\n                \n            \n\n\n            \n                \n                    save user settings\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availableCurrencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.currencyService.availableCurrencies\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.page.ts:30\n                            \n                        \n\n                \n                    \n                        declare available currencies\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultCurrency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"EUR\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.page.ts:25\n                            \n                        \n\n                \n                    \n                        declare default currency as EUR\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings/settings.page.ts:20\n                            \n                        \n\n                \n                    \n                        declare username\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { CurrencyService } from '../currency.service';\n\n/**\n * Component for login\n */\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n    /**\n     * declare username\n     * @type {string}\n     */\n  username = \"\";\n    /**\n     * declare default currency as EUR\n     * @type {string}\n     */\n  defaultCurrency = \"EUR\";\n    /**\n     * declare available currencies\n     * @type {{EUR: string; USD: string; GBP: string; PLN: string; RUB: string; THB: string}}\n     */\n  availableCurrencies = this.currencyService.availableCurrencies;\n\n    /**\n     * declare parameters\n     * @param {Router} router\n     * @param {SettingsService} settingsService\n     * @param {AlertController} alertController\n     * @param {CurrencyService} currencyService\n     */\n  constructor(\n    private router: Router,\n    private settingsService: SettingsService,\n    private alertController: AlertController,\n    private currencyService: CurrencyService,\n  ) {}\n\n    /**\n     * run method\n     */\n  ngOnInit() {\n    this.username = this.settingsService.username;\n  }\n\n    /**\n     * save user settings\n     * @returns {Promise}\n     */\n  async save() {\n    this.settingsService.username = this.username;\n    this.settingsService.defaultCurrency = this.defaultCurrency;\n    this.settingsService.save();\n\n    if(!this.settingsService.areSettingsValid) {\n      const controller = await this.alertController.create({\n        message: \"Settings are not valid\",\n        header: \"Error\",\n        buttons: [\"OK\"]\n      });\n\n      await controller.present();\n      return;\n    }\n\n    if(this.router.url.indexOf(\"tabs\") === -1)\n      this.router.navigate([\"tabs\"]);\n  }\n}\n\n    \n\n    \n        \n  \n    Settings\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    Username\n    \n  \n  \n    Currency\n    \n      {{ item.value }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Settings                                    Username            Currency          {{ item.value }}            '\n    var COMPONENTS = [{'name': 'CashboxPage', 'selector': 'app-cashbox'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'MapPage', 'selector': 'app-map'},{'name': 'NotesPage', 'selector': 'app-notes'},{'name': 'OverviewPage', 'selector': 'app-overview'},{'name': 'SettingsPage', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageModule.html":{"url":"modules/SettingsPageModule.html","title":"module - SettingsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultCurrency\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    areSettingsValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/settings.service.ts:24\n                            \n                        \n\n                \n                    \n                            parse JSON data\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/settings.service.ts:44\n                \n            \n\n\n            \n                \n                    save default value into storage\n\n\n                    \n                        Example :\n                        \n                            JSON.stringify({ username: aga, defaultCurrency: EURO }\n                        \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultCurrency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"EUR\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.service.ts:16\n                            \n                        \n\n                \n                    \n                        define default for currency\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/settings.service.ts:11\n                            \n                        \n\n                \n                    \n                        define variable\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        areSettingsValid\n                    \n                \n\n                \n                    \n                        getareSettingsValid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/settings.service.ts:22\n                                \n                            \n                    \n                        \n                                define variable\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n    /**\n     * define variable\n     * @type {string}\n     */\n  public username = \"\";\n    /**\n     * define default for currency\n     * @type {string}\n     */\n  public defaultCurrency = \"EUR\";\n\n    /**\n     * define variable\n     * @returns {boolean}\n     */\n  get areSettingsValid() {\n    return this.username.length > 0 && this.defaultCurrency.length > 0;\n  }\n\n    /**\n     * parse JSON data\n     */\n\n  constructor() {\n    try {\n      const obj = JSON.parse(localStorage.getItem(\"settings\"));\n      this.username = obj[\"username\"] || \"\";\n      this.defaultCurrency = obj[\"defaultCurrency\"] || \"EUR\";\n    }\n    catch(e) {}\n  }\n\n    /**\n     * save default value into storage\n     * @example JSON.stringify({ username: aga, defaultCurrency: EURO }\n     */\n\n  save() {\n    localStorage.setItem(\"settings\", JSON.stringify({ username: this.username, defaultCurrency: this.defaultCurrency }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sum.html":{"url":"classes/Sum.html","title":"class - Sum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/cashbox.service.ts\n        \n\n            \n                Description\n            \n            \n                declare data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                sum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currency\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox.service.ts:42\n                            \n                        \n\n                \n                    \n                        declare currency as a string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/cashbox.service.ts:38\n                            \n                        \n\n                \n                    \n                        declare sum as a number\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SettingsService } from './settings.service';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * export Invoice data\n */\nexport class Invoice {\n    /**\n     * declare id as a number\n     */\n  id?: number;\n    /**\n     * declare title as a string\n     */\n  title: string;\n    /**\n     * declare cost as a number\n     */\n  cost: number;\n    /**\n     * declare currency as a string (EUR as default)\n     */\n  currency: string = \"EUR\";\n    /**\n     * declare description as a string\n     */\n  description: string;\n}\n\n/**\n * declare data\n */\nexport class Sum {\n    /**\n     * declare sum as a number\n     */\n  sum: number;\n    /**\n     * declare currency as a string\n     */\n  currency: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CashboxService {\n\n    /**\n     * define cnstructor\n     * @param {HttpClient} httpClient\n     */\n  constructor(\n    private httpClient: HttpClient,\n  ) {}\n\n    /**\n     * ad new invoice\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n  async add(invoice: Invoice) {\n    return await this.httpClient.post(\"/api/cashbox\", invoice).toPromise();\n  }\n\n    /**\n     * let update the invoce\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n  async update(invoice: Invoice): Promise {\n    return await this.httpClient.put(`/api/cashbox/${invoice.id}`, invoice).toPromise();\n  }\n\n    /**\n     * get info. invoice\n     * @returns {Promise}\n     */\n  async all(): Promise {\n    return await this.httpClient.get(\"/api/cashbox\").toPromise();\n  }\n\n    /**\n     * sum the invoces\n     * @param {string} currency\n     * @returns {Promise}\n     */\n\n  async sum(currency = \"EUR\"): Promise {\n    return await this.httpClient.get(`/api/cashbox/sum/${currency}`).toPromise();\n  }\n\n    /**\n     * method for deleting an invoice\n     * @param {Invoice} invoice\n     * @returns {Promise}\n     */\n  async delete(invoice: Invoice): Promise {\n    return await this.httpClient.delete(`/api/cashbox/${invoice.id}`).toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabs/tabs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TabsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs.router.module';\n\nimport { TabsPage } from './tabs.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageRoutingModule.html":{"url":"modules/TabsPageRoutingModule.html","title":"module - TabsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabs/tabs.router.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'overview',\n        children: [\n          {\n            path: '',\n            loadChildren: '../overview/overview.module#OverviewPageModule'\n          }\n        ]\n      },\n      {\n        path: 'map',\n        children: [\n          {\n            path: '',\n            loadChildren: '../map/map.module#MapPageModule'\n          }\n        ]\n      },\n      {\n        path: 'cashbox',\n        children: [\n          {\n            path: '',\n            loadChildren: '../cashbox/cashbox.module#CashboxPageModule'\n          }\n        ]\n      },\n      {\n        path: 'notes',\n        children: [\n          {\n            path: '',\n            loadChildren: '../notes/notes.module#NotesPageModule'\n          }\n        ]\n      },\n      {\n        path: 'settings',\n        children: [\n          {\n            path: '',\n            loadChildren: '../settings/settings.module#SettingsPageModule'\n          }\n        ]\n      },\n      {\n        path: '',\n        redirectTo: '/tabs/overview',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/tabs/overview',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPosition.html":{"url":"classes/UserPosition.html","title":"class - UserPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/map.service.ts\n        \n\n            \n                Description\n            \n            \n                export class UserPosition\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                position\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Position\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/map.service.ts:18\n                            \n                        \n\n                \n                    \n                        define position as a Position\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/map.service.ts:14\n                            \n                        \n\n                \n                    \n                        define username as a string\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SettingsService } from './settings.service';\nimport { Subject } from 'rxjs';\nimport { PositionService } from './position.service';\n\n/**\n * export class UserPosition\n */\nexport class UserPosition {\n  /**\n   * define username as a string\n   */\n  username: string;\n    /**\n     * define position as a Position\n     */\n  position: Position;\n}\n/**\n * @ignore\n */\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * export MapService\n */\nexport class MapService {\n    /**\n     * define array for user positions\n     * @type {any[]}\n     */\n  public positions: UserPosition[] = [];\n    /**\n     * define variable for user position changes\n     * @type {Subject}\n     */\n  public positionsChanged = new Subject();\n    /**\n     * define variable for position settings\n     * @type {boolean}\n     */\n  private isSetup = false;\n    /**\n     * define variable for time\n     */\n  private timer: any;\n\n    /**\n     * set parameters\n     * @param {SettingsService} settingsService\n     * @param {HttpClient} httpClient\n     * @param {PositionService} positionService\n     */\n\n  constructor(\n    private settingsService: SettingsService,\n    private httpClient: HttpClient,\n    private positionService: PositionService,\n  ) {}\n\n    /**\n     * position upload every 2 sec\n     * @returns {Promise}\n     */\n  async setup() {\n    if(this.isSetup)\n      return;\n\n    await this.uploadMyPositionAndFetchOthersPositions();\n    this.timer = setInterval(this.uploadMyPositionAndFetchOthersPositions.bind(this), 2000);\n    this.isSetup = true;\n  }\n\n    /**\n     * stop chasing the position\n     */\n  cancel() {\n    if(!this.isSetup)\n      return;\n\n    clearInterval(this.timer);\n    this.timer = null;\n    this.isSetup = false;\n  }\n\n    /**\n     * get info. about current user position\n     * @returns {Promise}\n     */\n  async getCurrentPosition(): Promise {\n    return await this.positionService.getCurrentPosition();\n  }\n\n    /**\n     * new user position\n     * @param {Position} position\n     * @returns {Promise}\n     */\n\n  private async updatePosition(position: Position) {\n    return this.httpClient.post(\"/api/position\", {\n      username: this.settingsService.username,\n      position: {\n        timestamp: position.timestamp,\n        coords: {\n          longitude: position.coords.longitude,\n          latitude: position.coords.latitude,\n        },\n      },\n    }).toPromise();\n  }\n\n    /**\n     * actual users position\n     * @returns {Promise}\n     */\n  private async uploadMyPositionAndFetchOthersPositions() {\n    try {\n      const position = await this.getCurrentPosition();\n      await this.updatePosition(position);\n      this.positions = await this.fetchPositions();\n      this.positionsChanged.next();\n    }\n    catch(e) {\n      console.error(\"Error uploading positions or fetching others positions\", e);\n    }\n  }\n\n    /**\n     * get user localisation data to promise\n     * @returns {Promise}\n     */\n\n  private async fetchPositions() : Promise {\n    return await this.httpClient.get(\"/api/positions\").toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/cashbox.service.ts\n            \n            class\n            Invoice\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/cashbox.service.ts\n            \n            class\n            Sum\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/cashbox.service.ts\n            \n            injectable\n            CashboxService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/cashbox/cashbox.page.ts\n            \n            component\n            CashboxPage\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/cashbox/editor/editor.component.ts\n            \n            component\n            EditorComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/map.service.ts\n            \n            class\n            UserPosition\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/map/map.page.ts\n            \n            component\n            MapPage\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/map/map.page.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/notes.service.ts\n            \n            class\n            Note\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/notes.service.ts\n            \n            injectable\n            NotesService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/notes/notes.page.ts\n            \n            component\n            NotesPage\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/overview/overview.page.ts\n            \n            component\n            OverviewPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/position.service.ts\n            \n            injectable\n            PositionService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/settings/settings.page.ts\n            \n            component\n            SettingsPage\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/test-helpers.ts\n            \n            function\n            createPosition\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/core : ^5.0.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.0.0\n        \n            @ionic/angular : ^4.1.0\n        \n            core-js : ^2.5.4\n        \n            leaflet : ^1.5.1\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createPosition   (src/.../test-helpers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/test-helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createPosition\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePosition()\n                \n            \n\n\n\n\n            \n                \n                    test position\n\n\n                    \n                    \n                    \n                        Returns :     Position\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CashboxPageModule\n\n\n\ncluster_CashboxPageModule_declarations\n\n\n\ncluster_MapPageModule\n\n\n\ncluster_MapPageModule_declarations\n\n\n\ncluster_NotesPageModule\n\n\n\ncluster_NotesPageModule_declarations\n\n\n\ncluster_OverviewPageModule\n\n\n\ncluster_OverviewPageModule_declarations\n\n\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCashboxPage\n\nCashboxPage\n\n\n\nCashboxPageModule\n\nCashboxPageModule\n\nCashboxPageModule -->\n\nCashboxPage->CashboxPageModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nCashboxPageModule -->\n\nEditorComponent->CashboxPageModule\n\n\n\n\n\nMapPage\n\nMapPage\n\n\n\nMapPageModule\n\nMapPageModule\n\nMapPageModule -->\n\nMapPage->MapPageModule\n\n\n\n\n\nNotesPage\n\nNotesPage\n\n\n\nNotesPageModule\n\nNotesPageModule\n\nNotesPageModule -->\n\nNotesPage->NotesPageModule\n\n\n\n\n\nOverviewPage\n\nOverviewPage\n\n\n\nOverviewPageModule\n\nOverviewPageModule\n\nOverviewPageModule -->\n\nOverviewPage->OverviewPageModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        43 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CashboxPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotesPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OverviewPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            require   (src/.../map.page.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n                \n                    \n                        Then we find all the tests.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        declaration of require\n\n                    \n                \n\n            \n        \n\n    src/app/map/map.page.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Page for showing user position on a map\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
